import{_ as t,c as l,a,b as s,e as n,o as i}from"./app-Bmd1-t5t.js";const p={};function o(c,e){return i(),l("div",null,[...e[0]||(e[0]=[a(`<h1 id="ит-03-03-введение-в-sql-основные-возможности-языка-структурированных-запросов" tabindex="-1"><a class="header-anchor" href="#ит-03-03-введение-в-sql-основные-возможности-языка-структурированных-запросов"><span>ИТ.03 - 03 - Введение в SQL. Основные возможности языка структурированных запросов</span></a></h1><h2 id="введение" tabindex="-1"><a class="header-anchor" href="#введение"><span>Введение</span></a></h2><p>Реляционные базы данных — это мощный инструмент для хранения и обработки информации. Но сами по себе таблицы с данными мало полезны, если у нас нет способа их удобно использовать. Для общения с базой данных существует специальный язык — <strong>SQL (Structured Query Language)</strong>.</p><p>SQL — это международный стандарт, поддерживаемый почти всеми реляционными СУБД (MySQL, PostgreSQL, Oracle, Microsoft SQL Server и др.). Он позволяет формулировать запросы к данным на понятном и относительно простом синтаксисе.</p><hr><h2 id="что-такое-sql" tabindex="-1"><a class="header-anchor" href="#что-такое-sql"><span>Что такое SQL?</span></a></h2><blockquote><p><strong>SQL (Structured Query Language)</strong> — это язык структурированных запросов, предназначенный для создания, изменения и извлечения данных из реляционных баз данных.</p></blockquote><p>SQL нужен для:</p><ul><li>Создания таблиц и баз данных.</li><li>Заполнения таблиц данными.</li><li>Поиска и анализа информации.</li><li>Управления доступом к данным.</li></ul><p><strong>Пример простого запроса:</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> age</span>
<span class="line"><span class="token keyword">FROM</span> students</span>
<span class="line"><span class="token keyword">WHERE</span> age <span class="token operator">&gt;</span> <span class="token number">18</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Такой запрос выберет имена и возраст всех студентов старше 18 лет.</p><hr><h2 id="особенности-sql" tabindex="-1"><a class="header-anchor" href="#особенности-sql"><span>Особенности SQL</span></a></h2><ol><li><p><strong>Декларативный характер.</strong><br> В SQL мы описываем, <em>что</em> хотим получить, а не <em>как</em> это сделать. Все технические детали берёт на себя СУБД.</p></li><li><p><strong>Универсальность.</strong><br> Основные конструкции SQL одинаковы в разных СУБД. Выучив их, можно работать с любыми системами.</p></li><li><p><strong>Стандартизация.</strong><br> SQL закреплён международными стандартами (ANSI, ISO).</p></li></ol><hr><h2 id="историческая-справка" tabindex="-1"><a class="header-anchor" href="#историческая-справка"><span>Историческая справка</span></a></h2><p>Развитие языка SQL связано с появлением реляционной модели данных, предложенной Эдгаром Коддом в 1970 году.</p><ul><li>В 1974 году специалисты IBM разработали первый вариант языка — <strong>SEQUEL</strong> (Structured English Query Language). Позже его название было изменено на SQL.</li><li>В 1986 году SQL стал стандартом ANSI, а в 1987 — международным стандартом ISO.</li><li>В 1990-2000-е годы каждая крупная СУБД стала развивать собственные расширения SQL, чтобы удовлетворять новые потребности пользователей.</li></ul><p>Сегодня SQL остаётся универсальным инструментом для работы с реляционными базами данных, а его расширения позволяют решать всё более сложные задачи.</p><hr><h2 id="стандарты-sql" tabindex="-1"><a class="header-anchor" href="#стандарты-sql"><span>Стандарты SQL</span></a></h2><p>Как и языки программирования, SQL развивается и обновляется. В разные годы выходили новые версии стандарта:</p><ul><li><strong>SQL-86, SQL-89</strong> — первые версии стандарта.</li><li><strong>SQL-92</strong> — наиболее важная версия, заложившая основу современного SQL.</li><li><strong>SQL:1999</strong> — добавлены триггеры, рекурсивные запросы и объектные возможности.</li><li><strong>SQL:2003</strong> — появление оконных функций и работы с XML.</li><li><strong>SQL:2011</strong> — поддержка временных данных.</li><li><strong>SQL:2016</strong> — работа с JSON.</li></ul><p>Знание стандартов помогает понимать, какие возможности SQL являются базовыми, а какие — зависят от конкретной СУБД.</p><hr><h2 id="диалекты-sql" tabindex="-1"><a class="header-anchor" href="#диалекты-sql"><span>Диалекты SQL</span></a></h2><p>Хотя SQL стандартизирован, у разных СУБД есть свои особенности. Эти вариации называют <strong>диалектами SQL</strong>.</p><p>Примеры диалектов:</p><ul><li><strong>PL/SQL</strong> — диалект Oracle, добавляющий процедурное программирование, пакеты и функции.</li><li><strong>T-SQL (Transact-SQL)</strong> — расширение Microsoft SQL Server. Поддерживает собственные функции и тесно интегрирован с .NET.</li><li><strong>PL/pgSQL</strong> — расширение PostgreSQL, известное поддержкой пользовательских типов данных и JSON.</li><li><strong>MySQL SQL</strong> — относительно близок к стандарту, но имеет свои особенности в работе с типами данных и ограничениями.</li><li><strong>SQLite SQL</strong> — довольно сильно ограничен по количеству возможностей, нацелен на автономную работу небольших встраиваемых БД.</li></ul><p><strong>Сравнение диалектов SQL в разных СУБД</strong></p><table><thead><tr><th>СУБД</th><th>Диалект</th><th>Особенности</th></tr></thead><tbody><tr><td><strong>Oracle</strong></td><td>PL/SQL</td><td>Поддержка процедурного программирования, пакетов, функций; высокая надёжность</td></tr><tr><td><strong>MS SQL Server</strong></td><td>T-SQL</td><td>Расширенные операторы, встроенные функции; интеграция с экосистемой Microsoft</td></tr><tr><td><strong>PostgreSQL</strong></td><td>PL/pgSQL</td><td>Поддержка JSON, пользовательских типов данных и расширенной аналитики</td></tr><tr><td><strong>MySQL</strong></td><td>SQL (вариация)</td><td>Простота, популярность в веб-разработке; некоторые ограничения стандарта</td></tr><tr><td><strong>SQLite</strong></td><td>SQL (урезанный)</td><td>Лёгкость и автономность; не поддерживает все возможности стандарта</td></tr></tbody></table><h3 id="пример-различии-в-диалектах" tabindex="-1"><a class="header-anchor" href="#пример-различии-в-диалектах"><span>Пример различий в диалектах</span></a></h3><p><strong>MySQL</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Возвращает текущие дату и время.</p><p>Если нужна только дата:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><p><strong>PostgreSQL</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Возвращает текущие дату и время в формате <code>timestamp</code> с указанием временной зоны.</p><p>Для текущей даты:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token keyword">CURRENT_DATE</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><p><strong>Oracle (PL/SQL)</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> SYSDATE <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Возвращает текущие дату и время.</p><p>Для большей точности (до микросекунд):</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> SYSTIMESTAMP <span class="token keyword">FROM</span> dual<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><p><strong>MS SQL Server (T-SQL)</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> GETDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Возвращает текущие дату и время.</p><p>Более современный вариант:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> SYSDATETIME<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><p><strong>SQLite</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token keyword">datetime</span><span class="token punctuation">(</span><span class="token string">&#39;now&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Возвращает дату и время в формате <code>YYYY-MM-DD HH:MM:SS</code>.</p><p>Только дата:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token keyword">date</span><span class="token punctuation">(</span><span class="token string">&#39;now&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><p>Как видно:</p><ul><li>MySQL и PostgreSQL поддерживают схожую конструкцию <code>NOW()</code>,</li><li>Oracle традиционно использует <code>SYSDATE</code> (через псевдотаблицу <code>dual</code>),</li><li>SQL Server — <code>GETDATE()</code> или <code>SYSDATETIME()</code>,</li><li>SQLite — функции <code>date()</code> и <code>datetime()</code> с параметром <code>&#39;now&#39;</code>.</li></ul><p>Таким образом, базовые конструкции SQL остаются общими, но детали могут отличаться в зависимости от конкретной СУБД.</p><hr><h2 id="основные-разделы-sql" tabindex="-1"><a class="header-anchor" href="#основные-разделы-sql"><span>Основные разделы SQL</span></a></h2><p>SQL состоит из нескольких групп команд, каждая из которых отвечает за свой набор действий.</p><img src="https://www.plantuml.com/plantuml/svg/XSzDJyCm30RWktz5pZvqzwr22qqqggKVf67th0rLfEAWDjC4YF-EMgP9I0DkFhn-NdixHJl6yt62j8blWxi32frZ7y3OGnZzUw1e1pxudbuSHTOwYcw4JqXNbpWonEPH8GBY6b68UHGsMYRSioSVVI2cBFKdsxiD8E8wRKEtR6PQSYC16LT6Qa0cT5L3aYIGhfRCve8MLxImv5zFW_sBRQIIcG5aUTb8FGzFjVWk4b998szLPDUAB50Sm_2RljEyd4qj3zN-5cKMoeoM9jikT_uZPbLHv0jPANNFi_ty0p_8kifByxDWwwWx7wSl" alt=" SQL"><h3 id="_1-ddl-data-definition-language-—-язык-определения-данных" tabindex="-1"><a class="header-anchor" href="#_1-ddl-data-definition-language-—-язык-определения-данных"><span>1. DDL (Data Definition Language) — язык определения данных</span></a></h3><p>Работает со структурой базы данных: создаёт, изменяет или удаляет таблицы.<br> Команды:</p><ul><li><code>CREATE</code> — создание объектов (баз, таблиц).</li><li><code>ALTER</code> — изменение структуры.</li><li><code>DROP</code> — удаление объектов.</li></ul><h3 id="_2-dml-data-manipulation-language-—-язык-манипулирования-данными" tabindex="-1"><a class="header-anchor" href="#_2-dml-data-manipulation-language-—-язык-манипулирования-данными"><span>2. DML (Data Manipulation Language) — язык манипулирования данными</span></a></h3><p>Позволяет добавлять и изменять сами данные в таблицах.<br> Команды:</p><ul><li><code>SELECT</code> — выбрать данные.</li><li><code>INSERT</code> — добавить данные.</li><li><code>UPDATE</code> — изменить данные.</li><li><code>DELETE</code> — удалить данные.</li></ul><h3 id="_3-dcl-data-control-language-—-язык-управления-доступом" tabindex="-1"><a class="header-anchor" href="#_3-dcl-data-control-language-—-язык-управления-доступом"><span>3. DCL (Data Control Language) — язык управления доступом</span></a></h3><p>Задаёт права пользователей.<br> Команды:</p><ul><li><code>GRANT</code> — предоставить права.</li><li><code>REVOKE</code> — отозвать права.</li></ul><h3 id="_4-tcl-transaction-control-language-—-язык-управления-транзакциями" tabindex="-1"><a class="header-anchor" href="#_4-tcl-transaction-control-language-—-язык-управления-транзакциями"><span>4. TCL (Transaction Control Language) — язык управления транзакциями</span></a></h3><p>Отвечает за группировку действий и сохранение результатов.<br> Команды:</p><ul><li><code>COMMIT</code> — зафиксировать изменения.</li><li><code>ROLLBACK</code> — отменить изменения.</li><li><code>SAVEPOINT</code> — поставить точку сохранения.</li></ul><hr><h2 id="базовая-структура-sql-запроса" tabindex="-1"><a class="header-anchor" href="#базовая-структура-sql-запроса"><span>Базовая структура SQL-запроса</span></a></h2><p>Минимальная схема SQL-запроса выглядит так:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">&lt;</span>столбцы<span class="token operator">&gt;</span></span>
<span class="line"><span class="token keyword">FROM</span> <span class="token operator">&lt;</span>таблица<span class="token operator">&gt;</span></span>
<span class="line"><span class="token keyword">WHERE</span> <span class="token operator">&lt;</span>условие<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>SELECT</code> — какие столбцы выбрать.</li><li><code>FROM</code> — из какой таблицы.</li><li><code>WHERE</code> — при каком условии.</li></ul><p><strong>Например</strong></p><p>Допустим, у нас есть таблица со списком студентов:</p><table><thead><tr><th>id</th><th>name</th><th>age</th><th>gender</th></tr></thead><tbody><tr><td>1</td><td>Иванов Иван</td><td>19</td><td>male</td></tr><tr><td>2</td><td>Петрова Мария</td><td>20</td><td>female</td></tr><tr><td>3</td><td>Сидоров Алексей</td><td>18</td><td>male</td></tr><tr><td>4</td><td>Смирнова Екатерина</td><td>21</td><td>female</td></tr><tr><td>5</td><td>Кузнецов Даниил</td><td>22</td><td>male</td></tr><tr><td>6</td><td>Новикова Анна</td><td>19</td><td>female</td></tr><tr><td>7</td><td>Фёдоров Михаил</td><td>20</td><td>male</td></tr></tbody></table>`,90),s("details",{class:"hint-container details"},[s("summary",null,"Код создания данной таблицы на языке SQL в диалекте SQLite"),s("div",{class:"language-sql line-numbers-mode","data-highlighter":"prismjs","data-ext":"sql"},[s("pre",null,[s("code",{class:"language-sql"},[s("span",{class:"line"},[s("span",{class:"token keyword"},"CREATE"),n(),s("span",{class:"token keyword"},"TABLE")]),n(`
`),s("span",{class:"line"},[n("  students "),s("span",{class:"token punctuation"},"(")]),n(`
`),s("span",{class:"line"},[n("    id "),s("span",{class:"token keyword"},"INT"),n(),s("span",{class:"token keyword"},"PRIMARY"),n(),s("span",{class:"token keyword"},"KEY"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    name "),s("span",{class:"token keyword"},"VARCHAR"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"255"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"NOT"),n(),s("span",{class:"token boolean"},"NULL"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    age "),s("span",{class:"token keyword"},"INT"),n(),s("span",{class:"token keyword"},"CHECK"),n(),s("span",{class:"token punctuation"},"("),n("age "),s("span",{class:"token operator"},">="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    gender "),s("span",{class:"token keyword"},"VARCHAR"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"6"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token keyword"},"CHECK"),n(),s("span",{class:"token punctuation"},"("),n("gender "),s("span",{class:"token operator"},"IN"),n(),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},"'male'"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'female'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"NOT"),n(),s("span",{class:"token boolean"},"NULL")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token punctuation"},")")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"INSERT"),n(),s("span",{class:"token keyword"},"INTO")]),n(`
`),s("span",{class:"line"},[n("  students "),s("span",{class:"token punctuation"},"("),n("id"),s("span",{class:"token punctuation"},","),n(" name"),s("span",{class:"token punctuation"},","),n(" age"),s("span",{class:"token punctuation"},","),n(" gender"),s("span",{class:"token punctuation"},")")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"VALUES")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'Иванов Иван'"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token number"},"19"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'male'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'Петрова Мария'"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token number"},"20"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'female'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"3"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'Сидоров Алексей'"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token number"},"18"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'male'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"4"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'Смирнова Екатерина'"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token number"},"21"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'female'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"5"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'Кузнецов Даниил'"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token number"},"22"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'male'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"6"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'Новикова Анна'"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token number"},"19"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'female'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("  "),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"7"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'Фёдоров Михаил'"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token number"},"20"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token string"},"'male'"),s("span",{class:"token punctuation"},")")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])]),s("codapi-snippet",{sandbox:"sqlite",editor:"basic",id:"students_01_sqlite.sql"})],-1),a(`<p>Тогда, мы можем выполнить несколько простых запросов.</p><h2 id="примеры-простых-запросов" tabindex="-1"><a class="header-anchor" href="#примеры-простых-запросов"><span>Примеры простых запросов</span></a></h2><h3 id="выбор-всех-данных" tabindex="-1"><a class="header-anchor" href="#выбор-всех-данных"><span>Выбор всех данных</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span></span>
<span class="line"><span class="token keyword">FROM</span> students<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,4),s("codapi-snippet",{sandbox:"sqlite",editor:"basic","depends-on":"students_01_sqlite.sql"},null,-1),a(`<h3 id="выбор-только-конкретных-столбцов" tabindex="-1"><a class="header-anchor" href="#выбор-только-конкретных-столбцов"><span>Выбор только конкретных столбцов</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> gender</span>
<span class="line"><span class="token keyword">FROM</span> students<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,2),s("codapi-snippet",{sandbox:"sqlite",editor:"basic","depends-on":"students_01_sqlite.sql"},null,-1),a(`<h3 id="отбор-по-условию" tabindex="-1"><a class="header-anchor" href="#отбор-по-условию"><span>Отбор по условию</span></a></h3><p><strong>Выбор всех студентов младше 21 года:</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> age</span>
<span class="line"><span class="token keyword">FROM</span> students</span>
<span class="line"><span class="token keyword">WHERE</span> age <span class="token operator">&lt;</span> <span class="token number">21</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),s("codapi-snippet",{sandbox:"sqlite",editor:"basic","depends-on":"students_01_sqlite.sql"},null,-1),a(`<p><strong>Выбор всех студентов мужского пола:</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> name</span>
<span class="line"><span class="token keyword">FROM</span> students</span>
<span class="line"><span class="token keyword">WHERE</span> gender <span class="token operator">=</span> <span class="token string">&#39;male&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),s("codapi-snippet",{sandbox:"sqlite",editor:"basic","depends-on":"students_01_sqlite.sql"},null,-1),a(`<hr><h2 id="почему-важно-изучать-sql" tabindex="-1"><a class="header-anchor" href="#почему-важно-изучать-sql"><span>Почему важно изучать SQL?</span></a></h2><ul><li>SQL универсален: освоив его, можно работать с любой реляционной СУБД.</li><li>Это базовый инструмент программиста, аналитика данных и администратора БД.</li><li>Он позволяет работать не с одной таблицей, а с большими взаимосвязанными структурами.</li></ul><hr><h2 id="практические-задания" tabindex="-1"><a class="header-anchor" href="#практические-задания"><span>Практические задания</span></a></h2><ol><li><p>Разберите, к каким разделам SQL относятся следующие команды:</p><ul><li><code>CREATE TABLE Students (...)</code></li><li><code>SELECT * FROM Students</code></li><li><code>INSERT INTO Students ...</code></li><li><code>GRANT ALL ON Students TO User1</code></li></ul></li><li><p>Вам дан запрос:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> item<span class="token punctuation">,</span> price</span>
<span class="line"><span class="token keyword">FROM</span> warehouse</span>
<span class="line"><span class="token keyword">WHERE</span> price <span class="token operator">&gt;</span> <span class="token number">1500</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Объясните своими словами, что он делает.</p></li><li><p>Составьте три задачи на русском языке, которые можно решить SQL-запросами в различных предметных областях:</p><ul><li>Продаже потребительских товаров</li><li>Организации грузоперевозок</li><li>Научно-исследовательской деятельности</li></ul></li></ol><hr><h2 id="полезные-ссылки" tabindex="-1"><a class="header-anchor" href="#полезные-ссылки"><span>Полезные ссылки</span></a></h2><ul><li><a href="https://www.w3schools.com/sql/" target="_blank" rel="noopener noreferrer">Основы SQL: учебник от W3Schools</a></li><li><a href="https://sqlbolt.com/" target="_blank" rel="noopener noreferrer">SQLBolt — интерактивное обучение SQL</a></li><li><a href="https://sql-academy.org/ru" target="_blank" rel="noopener noreferrer">SQL ACADEMY. Онлайн тренажер с упражнениями по SQL</a></li></ul>`,9)])])}const d=t(p,[["render",o]]),u=JSON.parse('{"path":"/disciplines/it03/lectures/03_lecture.html","title":"ИТ.03 - 03 - Введение в SQL. Основные возможности языка структурированных запросов","lang":"ru-RU","frontmatter":{"description":"ИТ.03 - 03 - Введение в SQL. Основные возможности языка структурированных запросов Введение Реляционные базы данных — это мощный инструмент для хранения и обработки информации. ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ИТ.03 - 03 - Введение в SQL. Основные возможности языка структурированных запросов\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-11T23:06:01.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://it.vshp.online/disciplines/it03/lectures/03_lecture.html"}],["meta",{"property":"og:site_name","content":"Кафедра ИТ"}],["meta",{"property":"og:title","content":"ИТ.03 - 03 - Введение в SQL. Основные возможности языка структурированных запросов"}],["meta",{"property":"og:description","content":"ИТ.03 - 03 - Введение в SQL. Основные возможности языка структурированных запросов Введение Реляционные базы данных — это мощный инструмент для хранения и обработки информации. ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ru-RU"}],["meta",{"property":"og:updated_time","content":"2025-10-11T23:06:01.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-11T23:06:01.000Z"}]]},"git":{"updatedTime":1760223961000,"contributors":[{"name":"PAVEL TKACHEV","username":"","email":"phoenixweiss@ya.ru","commits":5}],"changelog":[{"hash":"ad50c9999d4378e461635297f9cd528f0bbcd880","time":1760223961000,"email":"phoenixweiss@ya.ru","author":"PAVEL TKACHEV","message":"Update 03_lecture.md, 04_lecture.md, 05_lecture.md, and 11 more files"},{"hash":"d5b280c18b8af6cdda049ca485c7975114d90f99","time":1760110764000,"email":"phoenixweiss@ya.ru","author":"PAVEL TKACHEV","message":"Update <a href=\\"http://index.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">index.md</a>, 03_lecture.md, 04_lecture.md, and 7 more files"},{"hash":"84b58cc46fb460879dc147ab190ea0133e22823a","time":1759419935000,"email":"phoenixweiss@ya.ru","author":"PAVEL TKACHEV","message":"Update settings.json, config.js, 03_lecture.md, and 5 more files"},{"hash":"b38866c5be4b69d0f987ac59fb492c3ee6d6db86","time":1758716660000,"email":"phoenixweiss@ya.ru","author":"PAVEL TKACHEV","message":"fix typo"},{"hash":"de36c47cb3ef77c1476e9b1b9237c83186a341a6","time":1758710040000,"email":"phoenixweiss@ya.ru","author":"PAVEL TKACHEV","message":"Добавил материалы по ИТ.03"}]},"autoDesc":true,"filePathRelative":"disciplines/it03/lectures/03_lecture.md"}');export{d as comp,u as data};
