import{_ as p,c as t,b as n,a as l,e as a,d as o,w as i,r as c,o as d}from"./app-CRAEKUA-.js";const r={},u={class:"hint-container warning"};function k(m,s){const e=c("RouteLink");return d(),t("div",null,[n("div",u,[s[5]||(s[5]=n("p",{class:"hint-container-title"},"Примечание",-1)),s[6]||(s[6]=n("p",null,[n("strong",null,"ЭТО АРХИВНАЯ ВЕРСИЯ КУРСА!")],-1)),n("p",null,[s[1]||(s[1]=a('Материалы предназначаются для пересдающих дисциплину "ОП.08 - Основы проектирования баз данных" в соответствии с учебными планами СПО годов набора ',-1)),s[2]||(s[2]=n("strong",null,"ДО 2024-го",-1)),s[3]||(s[3]=a('. Для того чтобы ознакомиться с актуальным курсом "ИТ.03 - Основы проектирования баз данных" включающим интерактивные примеры, ',-1)),o(e,{to:"/disciplines/it03/"},{default:i(()=>[...s[0]||(s[0]=[a("перейдите по ссылке",-1)])]),_:1}),s[4]||(s[4]=a(".",-1))]),s[7]||(s[7]=n("p",null,"Материалы были перенесены со старого сайта с минимальной доработкой, поэтому не все возможности курса могут работать как ожидается, где-то может слететь форматирование.",-1)),s[8]||(s[8]=n("p",null,[n("strong",null,"Домашние задания в рамках курса проверяться не будут!")],-1))]),s[9]||(s[9]=l(`<h1 id="оп-08-08-оператор-having-добавление-данных-оператор-insert-обновление-данных-оператор-update-удаление-данных-оператор-delete" tabindex="-1"><a class="header-anchor" href="#оп-08-08-оператор-having-добавление-данных-оператор-insert-обновление-данных-оператор-update-удаление-данных-оператор-delete"><span>ОП.08 - 08 - Оператор <code>HAVING</code>. Добавление данных, оператор <code>INSERT</code>. Обновление данных, оператор <code>UPDATE</code>. Удаление данных, оператор <code>DELETE</code></span></a></h1><p>Примеры данной темы используют учебные БД:</p><details><summary><b>employees_01.sql</b></summary><p><a href="./includes/employees_01.sql" title=":include">employees_01.sql</a></p></details><br><details><summary><b>orders_02.sql</b></summary><p><a href="./includes/orders_02.sql" title=":include">orders_02.sql</a></p></details><h2 id="оператор-having" tabindex="-1"><a class="header-anchor" href="#оператор-having"><span>Оператор <code>HAVING</code></span></a></h2><p>Оператор <code>HAVING</code> используется в SQL для фильтрации результатов запроса, которые были сгруппированы с помощью оператора <code>GROUP BY</code>. Он позволяет указать условие, которое должно выполняться для группы, чтобы она была включена в результат.</p><p>Например, давайте посмотрим на пример использования оператора <code>HAVING</code> на учебной БД для студентов:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> job_title<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">as</span> avg_salary</span>
<span class="line"><span class="token keyword">FROM</span> employees</span>
<span class="line"><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job_title</span>
<span class="line"><span class="token keyword">HAVING</span> avg_salary <span class="token operator">&gt;</span> <span class="token number">35000</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>В этом запросе мы группируем сотрудников по должностям и вычисляем среднюю зарплату для каждой группы. Затем мы используем оператор <code>HAVING</code>, чтобы выбрать только те группы, у которых средняя зарплата выше 35 000 рублей.</p><p>Результатом будет таблица, содержащая только должности со средней зарплатой выше 35 000 рублей:</p><table><thead><tr><th>job_title</th><th>avg_salary</th></tr></thead><tbody><tr><td>дизайнер</td><td>41000</td></tr><tr><td>программист</td><td>36000</td></tr><tr><td>фотограф</td><td>53000</td></tr><tr><td>ведущий программист</td><td>120000</td></tr></tbody></table><p>Или другой пример — допустим, у нас есть таблица &quot;заказы&quot; (orders), которая содержит информацию о заказах в интернет-магазине. Каждый заказ имеет уникальный идентификатор (id), а также указывается, какой товар был куплен (product_name) и в каком количестве (quantity).</p><p>Мы хотим вывести список товаров, которые были заказаны более 25 раз:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> product_name<span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span>quantity<span class="token punctuation">)</span> <span class="token keyword">as</span> total_quantity</span>
<span class="line"><span class="token keyword">FROM</span> orders</span>
<span class="line"><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> product_name</span>
<span class="line"><span class="token keyword">HAVING</span> total_quantity <span class="token operator">&gt;</span> <span class="token number">25</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>В этом запросе мы сначала группируем заказы по названию товара и вычисляем общее количество единиц каждого товара, проданных в рамках всех заказов (с помощью агрегирующей функции <code>SUM</code>). Затем мы используем оператор <code>HAVING</code>, чтобы выбрать только те товары, которые были заказаны более 25 раз (т.е. у которых общее количество единиц больше 25).</p><p>Результатом будет таблица, содержащая только те товары, которые были заказаны более 25 раз:</p><table><thead><tr><th>product_name</th><th>total_quantity</th></tr></thead><tbody><tr><td>футболка</td><td>30</td></tr><tr><td>шорты</td><td>35</td></tr></tbody></table><p>Таким образом, оператор <code>HAVING</code> позволяет фильтровать результаты запроса на основе агрегированных данных (например, средних значений, сумм и т.д.), что делает его очень полезным инструментом при анализе больших объемов данных.</p><h2 id="добавление-данных-оператор-insert" tabindex="-1"><a class="header-anchor" href="#добавление-данных-оператор-insert"><span>Добавление данных, оператор <code>INSERT</code></span></a></h2><p>Для добавления новых записей в таблицу предназначен оператор <code>INSERT</code>.<br> Рассмотрим его общую структуру.</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> имя_таблицы <span class="token punctuation">[</span><span class="token punctuation">(</span>поле_таблицы<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token comment">-- значения прописанные вручную</span></span>
<span class="line"><span class="token keyword">VALUES</span> <span class="token punctuation">(</span>значение_поля_таблицы<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">-- или значения полученные запросом SELECT</span></span>
<span class="line"><span class="token keyword">SELECT</span> поле_таблицы<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> имя_таблицы <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Значения можно вставлять перечислением с помощью слова <code>VALUES</code>, перечислив их в круглых скобках через запятую или c помощью оператора <code>SELECT</code>.</p><p>Допустим, на работу приняли нового сотрудника Иванова Ивана (род. 1.06.2003) на должность «программист-стажер» с окладом 18500 руб. в месяц, но корпоративный email ему пока не создавали. Запрос для выполнения данной задачи будет выглядеть следующим образом:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> employees <span class="token punctuation">(</span>first_name<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> birthday<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> job_title<span class="token punctuation">,</span> gender<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;Иван&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Иванов&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2003-06-01&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;18500&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;программист-стажер&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;М&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Или допустим, в таблицу продаж добавили сразу несколько продаж — продали 4 пары носков, 10 единиц футболок и 5 единиц шорт. Запрос для выполнения данной задачи будет выглядеть следующим образом:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders <span class="token punctuation">(</span>product_name<span class="token punctuation">,</span> quantity<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">VALUES</span></span>
<span class="line">  <span class="token punctuation">(</span><span class="token string">&#39;носки&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">(</span><span class="token string">&#39;футболка&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">(</span><span class="token string">&#39;шорты&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>[!TIP]<br> Следует помнить, что первичный ключ таблицы является уникальным значением и добавление уже существующего значения приведёт к ошибке, но в MySQL для решения подобной задачи в автоматическом режиме принято использовать уникальное свойство <code>AUTO_INCREMENT</code></p></blockquote><p>Добавление записей через <code>INSERT INTO ... SELECT ...</code> мы рассмотрим в рамках данного курса позднее, когда научимся работать с несколькими таблицами.</p><h2 id="обновление-данных-оператор-update" tabindex="-1"><a class="header-anchor" href="#обновление-данных-оператор-update"><span>Обновление данных, оператор <code>UPDATE</code></span></a></h2><p>Для редактирования существующих записей в таблицах существует SQL оператор <code>UPDATE</code>.<br> Рассмотрим его общую структуру.</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">UPDATE</span> имя_таблицы</span>
<span class="line"><span class="token keyword">SET</span> поле_таблицы<span class="token number">1</span> <span class="token operator">=</span> значение_поля_таблицы<span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">    поле_таблицыN <span class="token operator">=</span> значение_поля_таблицыN</span>
<span class="line"><span class="token punctuation">[</span><span class="token keyword">WHERE</span> условие_выборки<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Так например, задача изменения фамилии сотрудника (например если девушка вышла замуж) может быть выполнено следующим запросом:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">UPDATE</span> employees</span>
<span class="line"><span class="token keyword">SET</span> last_name <span class="token operator">=</span> <span class="token string">&#39;Синдеева&#39;</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>[!INFO]<br> В различных СУБД существуют некоторые ограничения на изменения полей, в большинстве из них связка <code>UPDATE ... SET</code> не будет работать без <code>WHERE</code>. В MySQL по-умолчанию включен т.н. «безопасный режим» или <code>safe_mode</code>, который не позволит выполнить запрос обновления без <code>WHERE</code>, при этом будет требоваться чтобы одним из условий <code>WHERE</code> было ключевое поле. Тем не менее, подобные ограничения отключаемы, но они защищают от случайно обновления лишних данных при неверно написанном запросе.</p></blockquote><h3 id="вычисляемые-значения" tabindex="-1"><a class="header-anchor" href="#вычисляемые-значения"><span>Вычисляемые значения</span></a></h3><p>В запросах на обновление данных можно менять значения, опираясь на предыдущие значение.</p><p>Например если мы хотим поднять оклад ведущему программисту на 10%, это можно сделать следующим запросом:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">UPDATE</span> employees <span class="token keyword">SET</span> salary <span class="token operator">=</span> salary <span class="token operator">*</span> <span class="token number">1.1</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Разрешается также значения одних столбцов присваивать другим столбцам. Но при этом, естественно, типы столбцов должны быть совместимыми.</p><h2 id="удаление-данных-оператор-delete" tabindex="-1"><a class="header-anchor" href="#удаление-данных-оператор-delete"><span>Удаление данных, оператор <code>DELETE</code></span></a></h2><p>Время от времени возникает задача удаления записей из таблицы. Для этого в SQL предусмотрены операторы <code>DELETE</code> и <code>TRUNCATE</code>, из которых наиболее универсальным и безопасным является первый вариант.</p><p>Рассмотрим его общую структуру.</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> имя_таблицы</span>
<span class="line"><span class="token punctuation">[</span><span class="token keyword">WHERE</span> условие_отбора_записей<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Если условие отбора записей <code>WHERE</code> отсутствует, то будут удалены все записи указанной таблицы.</p><blockquote><p>[!INFO]<br> С включенным <code>safe_mode</code> СУБД MySQL такую операцию выполнить не позволит, сообщив о том что операция небезопасна, и выкинет соответствующую ошибку.</p></blockquote><p>Эту же операцию (удаления всех записей) можно сделать также с помощью оператора <code>TRUNCATE</code>. Он выполнит удаление таблицы и пересоздаст её заново - этот вариант работает гораздо быстрее, чем удаление всех записей одна за другой (как в случае с <code>DELETE</code>) особенно для больших таблиц.</p><p>Общая структура запроса с оператором <code>TRUNCATE</code>:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> имя_таблицы<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>[!INFO]<br> Оптимизатор запросов СУБД MySQL автоматически использует оператор <code>TRUNCATE</code>, если оператор <code>DELETE</code> не содержит условия <code>WHERE</code> или конструкции <code>LIMIT</code> при отключенном <code>safe_mode</code>.</p></blockquote><p>Для удаления отдельных записей используется запрос <code>DELETE</code> с указанием первичных ключей соответствующих записей. Например, если мы хотим удалить двоих сотрудников с первичными ключами 1 и 4, запрос будет выглядеть следующим образом:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>А если мы хотим очистить все заказы, то используем следующий запрос:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> orders<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="задания-для-самопроверки" tabindex="-1"><a class="header-anchor" href="#задания-для-самопроверки"><span>Задания для самопроверки</span></a></h2><h3 id="задание-1" tabindex="-1"><a class="header-anchor" href="#задание-1"><span>Задание 1</span></a></h3><p>Получите данные о товарах, которые куплены менее <code>30</code> раз.</p><details><summary><b>ОТВЕТ</b></summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> product_name<span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span>quantity<span class="token punctuation">)</span> <span class="token keyword">as</span> total_quantity</span>
<span class="line"><span class="token keyword">FROM</span> orders</span>
<span class="line"><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> product_name</span>
<span class="line"><span class="token keyword">HAVING</span> total_quantity <span class="token operator">&lt;</span> <span class="token number">30</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="задание-2" tabindex="-1"><a class="header-anchor" href="#задание-2"><span>Задание 2</span></a></h3><p>Получите данные о должностях, у которых средняя зарплата сотрудников превышает 35000 рублей.</p><details><summary><b>ОТВЕТ</b></summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> job_title<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">as</span> avg_salary</span>
<span class="line"><span class="token keyword">FROM</span> employees</span>
<span class="line"><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job_title</span>
<span class="line"><span class="token keyword">HAVING</span> avg_salary <span class="token operator">&gt;</span> <span class="token number">35000</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="задание-3" tabindex="-1"><a class="header-anchor" href="#задание-3"><span>Задание 3</span></a></h3><p>Определите должности, где средняя зарплата мужчин превышает 40000 рублей.</p><details><summary><b>ОТВЕТ</b></summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> job_title<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">as</span> avg_salary</span>
<span class="line"><span class="token keyword">FROM</span> employees</span>
<span class="line"><span class="token keyword">WHERE</span> gender <span class="token operator">=</span> <span class="token string">&#39;М&#39;</span></span>
<span class="line"><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job_title</span>
<span class="line"><span class="token keyword">HAVING</span> avg_salary <span class="token operator">&gt;</span> <span class="token number">40000</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="задание-4" tabindex="-1"><a class="header-anchor" href="#задание-4"><span>Задание 4</span></a></h3><p>Вывести фамилию, должность и зарплату сотрудников, у которых она выше <code>35000</code>.</p><details><summary><b>ОТВЕТ</b></summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span> job_title<span class="token punctuation">,</span> salary</span>
<span class="line"><span class="token keyword">FROM</span> employees</span>
<span class="line"><span class="token keyword">WHERE</span> salary <span class="token operator">&gt;</span> <span class="token number">35000</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="задание-5" tabindex="-1"><a class="header-anchor" href="#задание-5"><span>Задание 5</span></a></h3><p>Добавить в таблицу <code>orders</code> товары, поступившие на склад: <code>поло - 10 шт</code>, <code>шарф - 15 шт</code>, <code>ботинки - 30 шт</code>.</p><details><summary><b>ОТВЕТ</b></summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders <span class="token punctuation">(</span>product_name<span class="token punctuation">,</span> quantity<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">VALUES</span></span>
<span class="line">  <span class="token punctuation">(</span><span class="token string">&#39;поло&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">(</span><span class="token string">&#39;шарф&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;15&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">(</span><span class="token string">&#39;ботинки&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;30&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="задание-6" tabindex="-1"><a class="header-anchor" href="#задание-6"><span>Задание 6</span></a></h3><p>Добавить 2 сотрудников в <code>employees</code>:</p><ol><li>Петр Иванов, 22.01.2000 г. рождения, на должность <code>старший программист</code>, с зарплатой <code>70000</code>.</li><li>Матвей Щукин, 27.06.1995 г. рождения, на должность <code>программист-стажер</code>, с зарплатой <code>35000</code>.</li></ol><details><summary><b>ОТВЕТ</b></summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> employees <span class="token punctuation">(</span>first_name<span class="token punctuation">,</span> last_name<span class="token punctuation">,</span> birthday<span class="token punctuation">,</span> salary<span class="token punctuation">,</span> job_title<span class="token punctuation">,</span> gender<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">VALUES</span></span>
<span class="line">  <span class="token punctuation">(</span><span class="token string">&#39;Петр&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Иванов&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2000-01-22&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;70000&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;старший программист&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;М&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">(</span><span class="token string">&#39;Матвей&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Щукин&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1995-06-27&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;35000&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;программист-стажер&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;М&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="задание-7" tabindex="-1"><a class="header-anchor" href="#задание-7"><span>Задание 7</span></a></h3><p>Обновить информацию о зарплате сотрудника с <code>id</code> = <code>3</code>, установив зарплату <code>45000</code>.</p><details><summary><b>ОТВЕТ</b></summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">UPDATE</span> employees <span class="token keyword">SET</span> salary <span class="token operator">=</span> <span class="token number">45000</span> <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><h3 id="задание-8" tabindex="-1"><a class="header-anchor" href="#задание-8"><span>Задание 8</span></a></h3><p>Обновить информацию о должности сотрудника с <code>id</code> = <code>3</code> на <code>&quot;главный программист&quot;</code>.</p><details><summary><b>ОТВЕТ</b></summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">UPDATE</span> employees</span>
<span class="line"><span class="token keyword">SET</span> job_title <span class="token operator">=</span> <span class="token string">&#39;главный программист&#39;</span></span>
<span class="line"><span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="задание-9" tabindex="-1"><a class="header-anchor" href="#задание-9"><span>Задание 9</span></a></h3><p>Поднять зарплату на <strong>7%</strong> всем сотрудникам, у которых в должности указано слово &quot;программист&quot; (включая должности &quot;программист&quot;, &quot;старший программист&quot;, &quot;программист-стажер&quot; и т.д.), при этом зарплаты сотрудников с другими должностями не должны измениться.</p><details><summary><b>ОТВЕТ</b></summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">UPDATE</span> employees</span>
<span class="line"><span class="token keyword">SET</span> salary <span class="token operator">=</span> salary <span class="token operator">*</span> <span class="token number">1.07</span></span>
<span class="line"><span class="token keyword">WHERE</span></span>
<span class="line">  job_title <span class="token operator">LIKE</span> <span class="token string">&#39;%программист%&#39;</span></span>
<span class="line">    <span class="token operator">AND</span></span>
<span class="line">  id <span class="token operator">&gt;</span> <span class="token number">0</span></span>
<span class="line"><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="задание-10" tabindex="-1"><a class="header-anchor" href="#задание-10"><span>Задание 10</span></a></h3><p>Удалить всех сотрудников с фамилией <code>&#39;Антонова&#39;</code>.</p><details><summary><b>ОТВЕТ</b></summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> employees</span>
<span class="line"><span class="token keyword">WHERE</span></span>
<span class="line">  last_name <span class="token operator">=</span> <span class="token string">&#39;Антонова&#39;</span></span>
<span class="line">    <span class="token operator">AND</span></span>
<span class="line">  id <span class="token operator">&gt;</span> <span class="token number">0</span></span>
<span class="line"><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="задание-11" tabindex="-1"><a class="header-anchor" href="#задание-11"><span>Задание 11</span></a></h3><p>Удалить сотрудника с <code>id</code> = <code>9</code>.</p><details><summary><b>ОТВЕТ</b></summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> employees</span>
<span class="line"><span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="задание-12" tabindex="-1"><a class="header-anchor" href="#задание-12"><span>Задание 12</span></a></h3><p>Удалить информацию обо всех заказах начиная с <code>id</code> = <code>10</code> включительно.</p><details><summary><b>ОТВЕТ</b></summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> orders</span>
<span class="line"><span class="token keyword">WHERE</span> id <span class="token operator">&gt;=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></details>`,92))])}const b=p(r,[["render",k]]),g=JSON.parse('{"path":"/disciplines/op08/op08_08.html","title":"ОП.08 - 08 - Оператор HAVING. Добавление данных, оператор INSERT. Обновление данных, оператор UPDATE. Удаление данных, оператор DELETE","lang":"ru-RU","frontmatter":{"description":"Примечание ЭТО АРХИВНАЯ ВЕРСИЯ КУРСА! Материалы предназначаются для пересдающих дисциплину \\"ОП.08 - Основы проектирования баз данных\\" в соответствии с учебными планами СПО годов...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ОП.08 - 08 - Оператор HAVING. Добавление данных, оператор INSERT. Обновление данных, оператор UPDATE. Удаление данных, оператор DELETE\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-31T12:29:12.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://it.vshp.online/disciplines/op08/op08_08.html"}],["meta",{"property":"og:site_name","content":"Кафедра ИТ"}],["meta",{"property":"og:title","content":"ОП.08 - 08 - Оператор HAVING. Добавление данных, оператор INSERT. Обновление данных, оператор UPDATE. Удаление данных, оператор DELETE"}],["meta",{"property":"og:description","content":"Примечание ЭТО АРХИВНАЯ ВЕРСИЯ КУРСА! Материалы предназначаются для пересдающих дисциплину \\"ОП.08 - Основы проектирования баз данных\\" в соответствии с учебными планами СПО годов..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ru-RU"}],["meta",{"property":"og:updated_time","content":"2025-10-31T12:29:12.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-31T12:29:12.000Z"}]]},"git":{"updatedTime":1761913752000,"contributors":[{"name":"PAVEL TKACHEV","username":"","email":"phoenixweiss@ya.ru","commits":1}],"changelog":[{"hash":"a771585bc5911f4a729d06794a6706536be6cc56","time":1761913752000,"email":"phoenixweiss@ya.ru","author":"PAVEL TKACHEV","message":"Update <a href=\\"http://index.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">index.md</a>, abacus.png, ada_lawlace.png, and 105 more files"}]},"autoDesc":true,"filePathRelative":"disciplines/op08/op08_08.md"}');export{b as comp,g as data};
