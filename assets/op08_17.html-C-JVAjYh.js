import{_ as e,c as t,b as n,a as o,e as a,d as l,w as c,r as i,o as d}from"./app-CRAEKUA-.js";const r={},u={class:"hint-container warning"};function k(m,s){const p=i("RouteLink");return d(),t("div",null,[n("div",u,[s[5]||(s[5]=n("p",{class:"hint-container-title"},"Примечание",-1)),s[6]||(s[6]=n("p",null,[n("strong",null,"ЭТО АРХИВНАЯ ВЕРСИЯ КУРСА!")],-1)),n("p",null,[s[1]||(s[1]=a('Материалы предназначаются для пересдающих дисциплину "ОП.08 - Основы проектирования баз данных" в соответствии с учебными планами СПО годов набора ',-1)),s[2]||(s[2]=n("strong",null,"ДО 2024-го",-1)),s[3]||(s[3]=a('. Для того чтобы ознакомиться с актуальным курсом "ИТ.03 - Основы проектирования баз данных" включающим интерактивные примеры, ',-1)),l(p,{to:"/disciplines/it03/"},{default:c(()=>[...s[0]||(s[0]=[a("перейдите по ссылке",-1)])]),_:1}),s[4]||(s[4]=a(".",-1))]),s[7]||(s[7]=n("p",null,"Материалы были перенесены со старого сайта с минимальной доработкой, поэтому не все возможности курса могут работать как ожидается, где-то может слететь форматирование.",-1)),s[8]||(s[8]=n("p",null,[n("strong",null,"Домашние задания в рамках курса проверяться не будут!")],-1))]),s[9]||(s[9]=o(`<h1 id="оп-08-17-update-select-и-insert-into-select-для-запросов-с-join-ами" tabindex="-1"><a class="header-anchor" href="#оп-08-17-update-select-и-insert-into-select-для-запросов-с-join-ами"><span>ОП.08 - 17 - <code>UPDATE SELECT</code> и <code>INSERT INTO SELECT</code> для запросов с <code>JOIN</code>-ами</span></a></h1><p>Примеры данной темы используют учебную БД:</p><details><summary><b>car_dealership.sql</b></summary><p><a href="./includes/car_dealership.sql" title=":include">car_dealership.sql</a></p></details><p>MySQL 8 предоставляет возможность использовать операторы <code>UPDATE SELECT</code> и <code>INSERT INTO SELECT</code> для запросов с <code>JOIN</code>-ами. Это позволяет обновлять или вставлять данные в таблицу на основе данных из другой таблицы, используя соединение <code>JOIN</code>.</p><p>Для примера рассмотрим таблицу <code>tmp</code>, которая содержит информацию о продаже автомобилей. Нам необходимо вынести данные о брендах, моделях, характеристиках и продажах в отдельные таблицы, чтобы упростить работу с данными и сделать структуру более наглядной.</p><p>Для начала создадим таблицы для брендов, моделей, характеристик и продаж:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> brands<span class="token punctuation">(</span></span>
<span class="line">  id            <span class="token keyword">INTEGER</span>  <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span>  <span class="token keyword">AUTO_INCREMENT</span></span>
<span class="line">  <span class="token punctuation">,</span>name         <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> models<span class="token punctuation">(</span></span>
<span class="line">  id            <span class="token keyword">INTEGER</span>  <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span>  <span class="token keyword">AUTO_INCREMENT</span></span>
<span class="line">  <span class="token punctuation">,</span>brand_id     <span class="token keyword">INTEGER</span></span>
<span class="line">  <span class="token punctuation">,</span>name         <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> cars<span class="token punctuation">(</span></span>
<span class="line">  id            <span class="token keyword">INTEGER</span>  <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span>  <span class="token keyword">AUTO_INCREMENT</span></span>
<span class="line">  <span class="token punctuation">,</span>model_id     <span class="token keyword">INTEGER</span></span>
<span class="line">  <span class="token punctuation">,</span><span class="token keyword">year</span>         <span class="token keyword">INTEGER</span></span>
<span class="line">  <span class="token punctuation">,</span>power        <span class="token keyword">INTEGER</span></span>
<span class="line">  <span class="token punctuation">,</span>drivetrain   <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">,</span>mileage      <span class="token keyword">INTEGER</span></span>
<span class="line">  <span class="token punctuation">,</span>cost         <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> sales<span class="token punctuation">(</span></span>
<span class="line">  id            <span class="token keyword">INTEGER</span>  <span class="token operator">NOT</span> <span class="token boolean">NULL</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span>  <span class="token keyword">AUTO_INCREMENT</span></span>
<span class="line">  <span class="token punctuation">,</span>cars_id   <span class="token keyword">INTEGER</span></span>
<span class="line">  <span class="token punctuation">,</span>sold_date    <span class="token keyword">DATE</span></span>
<span class="line">  <span class="token punctuation">,</span>client_name  <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Затем заполним таблицы данными из таблицы <code>tmp</code> с помощью оператора <code>INSERT INTO SELECT</code> и соединения <code>JOIN</code>:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token comment">-- Заполнение таблицы brands</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> brands<span class="token punctuation">(</span>name<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> brand <span class="token keyword">FROM</span> tmp<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- Заполнение таблицы models</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> models<span class="token punctuation">(</span>brand_id<span class="token punctuation">,</span> name<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> brands<span class="token punctuation">.</span>id<span class="token punctuation">,</span> tmp<span class="token punctuation">.</span>model</span>
<span class="line"><span class="token keyword">FROM</span> tmp</span>
<span class="line"><span class="token keyword">JOIN</span> brands <span class="token keyword">ON</span> tmp<span class="token punctuation">.</span>brand <span class="token operator">=</span> brands<span class="token punctuation">.</span>name<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- Заполнение таблицы cars</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> cars<span class="token punctuation">(</span>id<span class="token punctuation">,</span> model_id<span class="token punctuation">,</span> <span class="token keyword">year</span><span class="token punctuation">,</span> power<span class="token punctuation">,</span> drivetrain<span class="token punctuation">,</span> mileage<span class="token punctuation">,</span> cost<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">SELECT</span> tmp<span class="token punctuation">.</span>id<span class="token punctuation">,</span> models<span class="token punctuation">.</span>id<span class="token punctuation">,</span> tmp<span class="token punctuation">.</span><span class="token keyword">year</span><span class="token punctuation">,</span> tmp<span class="token punctuation">.</span>power<span class="token punctuation">,</span> tmp<span class="token punctuation">.</span>drivetrain<span class="token punctuation">,</span> tmp<span class="token punctuation">.</span>mileage<span class="token punctuation">,</span> tmp<span class="token punctuation">.</span>cost</span>
<span class="line"><span class="token keyword">FROM</span> tmp</span>
<span class="line"><span class="token keyword">JOIN</span> models <span class="token keyword">ON</span> tmp<span class="token punctuation">.</span>model <span class="token operator">=</span> models<span class="token punctuation">.</span>name<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- Заполнение таблицы sales</span></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> sales<span class="token punctuation">(</span>cars_id<span class="token punctuation">,</span> sold_date<span class="token punctuation">,</span> client_name<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">SELECT</span> tmp<span class="token punctuation">.</span>id<span class="token punctuation">,</span> tmp<span class="token punctuation">.</span>sold_date<span class="token punctuation">,</span> tmp<span class="token punctuation">.</span>client_name</span>
<span class="line"><span class="token keyword">FROM</span> tmp</span>
<span class="line"><span class="token keyword">WHERE</span> <span class="token punctuation">(</span>sold_date <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span> <span class="token operator">AND</span> <span class="token punctuation">(</span>client_name <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Если же например данные при первоначальном разборе не были добавлены в таблицу, тогда используем <code>UPDATE</code>, например, мы можем обновить данные в таблице <code>cars</code> на основе данных из таблицы <code>tmp</code> следующим образом:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">UPDATE</span> cars</span>
<span class="line"><span class="token keyword">JOIN</span> tmp <span class="token keyword">ON</span> cars<span class="token punctuation">.</span>model_id <span class="token operator">=</span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token keyword">SELECT</span> id</span>
<span class="line">  <span class="token keyword">FROM</span> models</span>
<span class="line">  <span class="token keyword">WHERE</span></span>
<span class="line">    name <span class="token operator">=</span> tmp<span class="token punctuation">.</span>model</span>
<span class="line">    <span class="token operator">AND</span> brand_id <span class="token operator">=</span> <span class="token punctuation">(</span></span>
<span class="line">      <span class="token keyword">SELECT</span> id</span>
<span class="line">      <span class="token keyword">FROM</span> brands</span>
<span class="line">      <span class="token keyword">WHERE</span> name <span class="token operator">=</span> tmp<span class="token punctuation">.</span>brand</span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">SET</span></span>
<span class="line">  cars<span class="token punctuation">.</span><span class="token keyword">year</span> <span class="token operator">=</span> tmp<span class="token punctuation">.</span><span class="token keyword">year</span><span class="token punctuation">,</span></span>
<span class="line">  cars<span class="token punctuation">.</span>power <span class="token operator">=</span> tmp<span class="token punctuation">.</span>power<span class="token punctuation">,</span></span>
<span class="line">  cars<span class="token punctuation">.</span>drivetrain <span class="token operator">=</span> tmp<span class="token punctuation">.</span>drivetrain<span class="token punctuation">,</span></span>
<span class="line">  cars<span class="token punctuation">.</span>mileage <span class="token operator">=</span> tmp<span class="token punctuation">.</span>mileage<span class="token punctuation">,</span></span>
<span class="line">  cars<span class="token punctuation">.</span>cost <span class="token operator">=</span> tmp<span class="token punctuation">.</span>cost</span>
<span class="line"><span class="token keyword">WHERE</span> cars<span class="token punctuation">.</span>id <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Таким образом, операторы <code>UPDATE SELECT</code> и <code>INSERT INTO SELECT</code> позволяют удобно работать с данными в таблицах, используя соединение <code>JOIN</code> и обновляя или вставляя данные на основе данных из других таблиц.</p>`,12))])}const E=e(r,[["render",k]]),b=JSON.parse('{"path":"/disciplines/op08/op08_17.html","title":"ОП.08 - 17 - UPDATE SELECT и INSERT INTO SELECT для запросов с JOIN-ами","lang":"ru-RU","frontmatter":{"description":"Примечание ЭТО АРХИВНАЯ ВЕРСИЯ КУРСА! Материалы предназначаются для пересдающих дисциплину \\"ОП.08 - Основы проектирования баз данных\\" в соответствии с учебными планами СПО годов...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ОП.08 - 17 - UPDATE SELECT и INSERT INTO SELECT для запросов с JOIN-ами\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-31T12:29:12.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://it.vshp.online/disciplines/op08/op08_17.html"}],["meta",{"property":"og:site_name","content":"Кафедра ИТ"}],["meta",{"property":"og:title","content":"ОП.08 - 17 - UPDATE SELECT и INSERT INTO SELECT для запросов с JOIN-ами"}],["meta",{"property":"og:description","content":"Примечание ЭТО АРХИВНАЯ ВЕРСИЯ КУРСА! Материалы предназначаются для пересдающих дисциплину \\"ОП.08 - Основы проектирования баз данных\\" в соответствии с учебными планами СПО годов..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ru-RU"}],["meta",{"property":"og:updated_time","content":"2025-10-31T12:29:12.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-31T12:29:12.000Z"}]]},"git":{"updatedTime":1761913752000,"contributors":[{"name":"PAVEL TKACHEV","username":"","email":"phoenixweiss@ya.ru","commits":1}],"changelog":[{"hash":"a771585bc5911f4a729d06794a6706536be6cc56","time":1761913752000,"email":"phoenixweiss@ya.ru","author":"PAVEL TKACHEV","message":"Update <a href=\\"http://index.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">index.md</a>, abacus.png, ada_lawlace.png, and 105 more files"}]},"autoDesc":true,"filePathRelative":"disciplines/op08/op08_17.md"}');export{E as comp,b as data};
