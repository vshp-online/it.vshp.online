import{_ as t,c as a,a as i,o as n}from"./app-CdTySVJ0.js";const r={};function p(s,e){return n(),a("div",null,[...e[0]||(e[0]=[i('<h1 id="_02-—-стек-и-очередь-lifo-fifo" tabindex="-1"><a class="header-anchor" href="#_02-—-стек-и-очередь-lifo-fifo"><span>02 — Стек и очередь (LIFO/FIFO)</span></a></h1><div class="hint-container warning"><p class="hint-container-title">Примечание</p><p>Раздел находится в процессе наполнения!</p></div><h2 id="стек-stack" tabindex="-1"><a class="header-anchor" href="#стек-stack"><span>Стек (Stack)</span></a></h2><p>Эта структура данных позволяет добавлять и удалять элементы только из начала. Она работает по принципу LIFO — Last In, First Out (англ. «последним пришёл — первым ушёл»). Последний добавленный в стек элемент должен будет покинуть его раньше остальных.</p><figure><img src="https://avatars.mds.yandex.net/get-lpc/1527204/46e345db-7e1f-4a4d-a3fc-08d277cff6d6/width_1920_q80" alt="Структура стека" tabindex="0" loading="lazy"><figcaption>Структура стека</figcaption></figure><p>Просмотреть стек можно целиком, а работать — только с вершиной. Для этого надо удалить или добавить последний элемент.</p><p>Как применяют стеки:</p><ul><li>Для реализации рекурсии.</li><li>Для вычислений постфиксных значений.</li><li>Для временного хранения данных, например истории запросов или изменений.</li></ul><h2 id="очередь-queue" tabindex="-1"><a class="header-anchor" href="#очередь-queue"><span>Очередь (Queue)</span></a></h2><p>Этот вид структуры представляет собой ряд данных, как и стек. Но в отличие от него она работает по принципу FIFO — First In, First Out (англ. «первым пришёл — первым ушёл»). Данные добавляют в конец, а извлекают из начала.</p><figure><img src="https://avatars.mds.yandex.net/get-lpc/1220100/d9a35f3b-452b-4870-af45-475040576afd/width_1920_q80" alt="Структура очереди" tabindex="0" loading="lazy"><figcaption>Структура очереди</figcaption></figure><p>В этой структуре данных всегда работают только с первым элементом. Остальные в это время «ждут своей очереди».</p><p>Бывают неклассические, двусторонние очереди. В них можно добавлять элементы и извлекать их из начала и конца структуры. Элементы посередине недоступны.</p><p>Как применяют очереди:</p><ul><li>Для реализации очередей, например на доступ к определённому ресурсу.</li><li>Для управления потоками в многопоточных средах.</li><li>Для генерации значений.</li><li>Для создания буферов.</li></ul>',15)])])}const c=t(r,[["render",p]]),d=JSON.parse('{"path":"/disciplines/up01/lectures/02_stack_queue.html","title":"02 — Стек и очередь (LIFO/FIFO)","lang":"ru-RU","frontmatter":{"description":"02 — Стек и очередь (LIFO/FIFO) Примечание Раздел находится в процессе наполнения! Стек (Stack) Эта структура данных позволяет добавлять и удалять элементы только из начала. Она...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"02 — Стек и очередь (LIFO/FIFO)\\",\\"image\\":[\\"https://avatars.mds.yandex.net/get-lpc/1527204/46e345db-7e1f-4a4d-a3fc-08d277cff6d6/width_1920_q80\\",\\"https://avatars.mds.yandex.net/get-lpc/1220100/d9a35f3b-452b-4870-af45-475040576afd/width_1920_q80\\"],\\"dateModified\\":\\"2025-10-26T22:04:25.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://it.vshp.online/disciplines/up01/lectures/02_stack_queue.html"}],["meta",{"property":"og:site_name","content":"Кафедра ИТ"}],["meta",{"property":"og:title","content":"02 — Стек и очередь (LIFO/FIFO)"}],["meta",{"property":"og:description","content":"02 — Стек и очередь (LIFO/FIFO) Примечание Раздел находится в процессе наполнения! Стек (Stack) Эта структура данных позволяет добавлять и удалять элементы только из начала. Она..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://avatars.mds.yandex.net/get-lpc/1527204/46e345db-7e1f-4a4d-a3fc-08d277cff6d6/width_1920_q80"}],["meta",{"property":"og:locale","content":"ru-RU"}],["meta",{"property":"og:updated_time","content":"2025-10-26T22:04:25.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-26T22:04:25.000Z"}]]},"git":{"updatedTime":1761516265000,"contributors":[{"name":"PAVEL TKACHEV","username":"","email":"phoenixweiss@ya.ru","commits":1}],"changelog":[{"hash":"b08244123ec11f0f24810ca659f86792f7a03172","time":1761516265000,"email":"phoenixweiss@ya.ru","author":"PAVEL TKACHEV","message":"Update <a href=\\"http://index.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">index.md</a>, <a href=\\"http://index.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">index.md</a>, 01_arrays_lists_set.md, and 5 more files"}]},"autoDesc":true,"filePathRelative":"disciplines/up01/lectures/02_stack_queue.md"}');export{c as comp,d as data};
