import{_ as e,c as d,a,o as r}from"./app-CLdaXbHd.js";const p={};function o(n,t){return r(),d("div",null,[...t[0]||(t[0]=[a('<h1 id="мдк-11-01-11-шестая-нормальная-форма-6nf-базы-данных" tabindex="-1"><a class="header-anchor" href="#мдк-11-01-11-шестая-нормальная-форма-6nf-базы-данных"><span>МДК.11.01 - 11 - Шестая нормальная форма (6NF) базы данных</span></a></h1><p>Сегодня мы с Вами рассмотрим шестую нормальную форму (6NF) базы данных, Вы узнаете, что это за нормальная форма и какие требования предъявляются к таблицам, чтобы база данных находилась в шестой нормальной форме.</p><h2 id="описание-шестои-нормальнои-формы-6nf" tabindex="-1"><a class="header-anchor" href="#описание-шестои-нормальнои-формы-6nf"><span><strong>Описание шестой нормальной формы (6NF)</strong></span></a></h2><p>Шестая нормальная форма (6NF) была введена при работе с хронологическими базами данных.</p><p><strong>Хронологическая база данных</strong> — это база, которая может хранить не только текущие данные, но и исторические данные, т.е. данные, относящиеся к прошлым периодам времени. Однако такая база может хранить и данные, относящиеся к будущим периодам времени.</p><p>В процессе проектирования хронологических баз данных возникают некоторые особые проблемы, решить которые можно с помощью: горизонтальной декомпозиции и вертикальной декомпозиции.</p><p>В данном случае нас интересует вертикальная декомпозиция, процесс которой очень сильно напоминает нашу классическую нормализацию, которую мы рассматривали до пятой нормальной формы включительно.</p><p>Иными словами, декомпозиция таблиц, которую мы использовали для приведения этих таблиц к той или иной нормальной форме, по факту и является вертикальной декомпозицией.</p><p>В процессе изучения хронологических баз данных исследователи выдвигали доводы в пользу максимально возможной вертикальной декомпозиции таблиц, а не просто их декомпозиции до какой-то определённой степени, которую требует классическая теория нормализации. Общая идея состояла в том, что таблицы должны быть приведены к неприводимым компонентам, под этим подразумеваются такие компоненты, для которых дальнейшая декомпозиция без потерь становится невозможной.</p><p>Теперь стоит напомнить, что пятая нормальная форма основана на так называемых зависимостях соединения.</p><p>А поскольку вертикальная декомпозиция, которая используется в хронологических базах данных, представляет собой классическое разделение таблиц на проекции, была сформулирована новая нормальная форма, основанная на обобщенном понятии зависимости соединения, поэтому новую форму назвали <em>«Шестая нормальная форма».</em></p><blockquote><p>Требование шестой нормальной формы заключается в том, что таблица должна удовлетворять всем нетривиальным зависимостям соединения.</p></blockquote><p>Из этого определения следует, что таблица находится в 6NF, когда она неприводима, то есть не может быть подвергнута дальнейшей декомпозиции без потерь. Стоит отметить, что таблица, которая находится в 6NF, также находится и в 5NF, и во всех предыдущих.</p><p>Шестая нормальная форма вводит такое понятие как <strong>«Декомпозиция до конца»</strong>, т.е. максимально возможная декомпозиция таблиц.</p><p>Идея «декомпозиции до конца» выдвигалась до начала исследований в области хронологических данных, но не нашла поддержки. Однако для хронологических баз данных максимально возможная декомпозиция позволяет бороться с избыточностью и упрощает поддержание целостности базы данных.</p><p>Для хронологических баз данных определены U_операторы, которые распаковывают отношения по указанным атрибутам, выполняют соответствующую операцию и упаковывают полученный результат. В данном примере соединение проекций отношения должно производиться при помощи оператора U_JOIN.</p><h3 id="работники" tabindex="-1"><a class="header-anchor" href="#работники"><span><strong>Работники</strong></span></a></h3><table><thead><tr><th>Таб. №</th><th>Время</th><th>Должность</th><th>Домашний адрес</th></tr></thead><tbody><tr><td>6575</td><td>[01-01-2000:10-02-2003]</td><td>слесарь</td><td>ул. Ленина, 10</td></tr><tr><td>6575</td><td>[11-02-2003:15-06-2006]</td><td>слесарь</td><td>ул. Советская, 22</td></tr><tr><td>6575</td><td>[16-06-2006:05-03-2009]</td><td>бригадир</td><td>ул. Советская, 22</td></tr></tbody></table><p>Переменная отношения «Работники» не находится в 6НФ и может быть подвергнута декомпозиции на переменные отношения «Должности работников» и «Домашние адреса работников».</p><h3 id="должности-работников" tabindex="-1"><a class="header-anchor" href="#должности-работников"><span>Должности работников</span></a></h3><table><thead><tr><th>Таб. №</th><th>Время</th><th>Должность</th></tr></thead><tbody><tr><td>6575</td><td>[01-01-2000:15-06-2006]</td><td>слесарь</td></tr><tr><td>6575</td><td>[16-06-2006:05-03-2009]</td><td>бригадир</td></tr></tbody></table><h3 id="домашние-адреса-работников" tabindex="-1"><a class="header-anchor" href="#домашние-адреса-работников"><span><strong>Домашние адреса работников</strong></span></a></h3><table><thead><tr><th>Таб. №</th><th>Время</th><th>Домашний адрес</th></tr></thead><tbody><tr><td>6575</td><td>[01-01-2000:10-02-2003]</td><td>ул. Ленина, 10</td></tr><tr><td>6575</td><td>[11-02-2003:15-06-2006]</td><td>ул. Советская, 22</td></tr></tbody></table><p>Однако, если в хронологических базах данных такая нормализация может быть полезна, так как она позволяет бороться с избыточностью, то в нехронологических базах данных нормализация таблиц до шестой нормальной формы приведёт к значительному снижению производительности. Кроме этого такая нормализация сделает работу с базой данных очень сложной за счет многократного увеличения количества таблиц.</p><p>Поэтому шестую нормальную форму в реальном мире не используют, более того, трудно даже представить себе ситуацию, при которой возникала бы необходимость нормализовать базу данных до шестой нормальной формы.</p><p>Здесь снова давайте вспомним, что нет никакой необходимости приводить базу данных до какой-то определенной нормальной формы.</p><blockquote><p>Процесс проектирования правильной базы данных — это не процесс приведения ее к самой высокой нормальной форме, это компромисс между отсутствием аномалий и приемлемой производительностью.</p></blockquote><p>Поэтому в процессе нормализации базы данных необходимо руководствоваться в первую очередь требованиями к разрабатываемой системе и требованиями предметной области. Вы должны подумать о том, какие именно операции (действия) будут выполняться над данными. Так все ошибки нормализации станут очевидными и Вы сможете увидеть, какие аномалии могут возникнуть в тех или иных случаях, и принимать решения о нормализации, иными словами, Вы должны руководствоваться здравым смыслом.</p>',28)])])}const h=e(p,[["render",o]]),c=JSON.parse('{"path":"/disciplines/mdk1101/lectures/11_lecture.html","title":"МДК.11.01 - 11 - Шестая нормальная форма (6NF) базы данных","lang":"ru-RU","frontmatter":{"description":"МДК.11.01 - 11 - Шестая нормальная форма (6NF) базы данных Сегодня мы с Вами рассмотрим шестую нормальную форму (6NF) базы данных, Вы узнаете, что это за нормальная форма и каки...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"МДК.11.01 - 11 - Шестая нормальная форма (6NF) базы данных\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-17T10:47:46.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://it.vshp.online/disciplines/mdk1101/lectures/11_lecture.html"}],["meta",{"property":"og:site_name","content":"Кафедра ИТ"}],["meta",{"property":"og:title","content":"МДК.11.01 - 11 - Шестая нормальная форма (6NF) базы данных"}],["meta",{"property":"og:description","content":"МДК.11.01 - 11 - Шестая нормальная форма (6NF) базы данных Сегодня мы с Вами рассмотрим шестую нормальную форму (6NF) базы данных, Вы узнаете, что это за нормальная форма и каки..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ru-RU"}],["meta",{"property":"og:updated_time","content":"2025-09-17T10:47:46.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-17T10:47:46.000Z"}]]},"git":{"updatedTime":1758106066000,"contributors":[{"name":"PAVEL TKACHEV","username":"","email":"phoenixweiss@ya.ru","commits":1}],"changelog":[{"hash":"f4a1c832c0dd13beccf432aed9f3c15753dd22b1","time":1758106066000,"email":"phoenixweiss@ya.ru","author":"PAVEL TKACHEV","message":"Добавил лекции в МДК.11.01"}]},"autoDesc":true,"filePathRelative":"disciplines/mdk1101/lectures/11_lecture.md"}');export{h as comp,c as data};
