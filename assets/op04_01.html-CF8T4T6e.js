import{_ as t,c as e,a as n,o as p}from"./app-CRAEKUA-.js";const s="/assets/al_horezmi-BeN63Zm0.png",o="/assets/abacus-Bm1Rn0Pz.png",r="/assets/ada_lawlace-Dw2E-1PV.png",g="/assets/babbage-DevM4nHf.jpg",i="/assets/babbages_analytical_engine-BjNALFac.jpg",l="/assets/machine_code-CA58WYpl.png",c={};function m(h,a){return p(),e("div",null,[...a[0]||(a[0]=[n('<div class="hint-container warning"><p class="hint-container-title">Примечание</p><p><strong>ЭТО АРХИВНАЯ ВЕРСИЯ КУРСА!</strong></p><p>Материалы предназначаются для пересдающих дисциплину &quot;ОП.04 - Основы алгоритмизации и программирования&quot; в соответствии с учебными планами СПО годов набора <strong>ДО 2023-го</strong>.</p><p>Материалы были перенесены со старого сайта с минимальной доработкой, поэтому не все возможности курса могут работать как ожидается, где-то может слететь форматирование.</p><p><strong>Домашние задания в рамках курса проверяться не будут!</strong></p></div><h1 id="оп-04-01-введение-алгоритмы-и-программы" tabindex="-1"><a class="header-anchor" href="#оп-04-01-введение-алгоритмы-и-программы"><span>ОП.04 - 01 - Введение. Алгоритмы и программы</span></a></h1><p>Ни для кого не секрет что за всю свою историю человек пытался всячески упростить себе жизнь, изобретая для этого все более и более сложные механизмы. Однако, ни одно изобретение от первой &quot;палки-копалки&quot; до ультрасовременного суперкомпьютера было бы невозможно без соответствующего образа мысли, вовремя пришедшей в светлую голову. Причем мало чтобы нужная мысль пришла — ее необходимо грамотно воплотить в жизнь. Многие изобретения и открытия не просто опередили свое время — они предвосхитили целые эпохи и дали платформу для новых воплощений силы человеческой мысли.</p><p>С древнейших времен развитие человечества напрямую связано с удивительной способностью преобразовывать мир вокруг себя не только &quot;здесь и сейчас&quot; но и существенно дальше собственной жизни, накапливая и передавая из поколения в поколение нечто более важное чем результаты собственного физического труда. И это &quot;нечто&quot; — информация.</p><p>Задолго до возникновения письменности у предков современного человека была возможность передать информацию лишь крайне ограниченным набором доступных средств, но и этого хватало чтобы сообщить, мол, тут — опасность, а вот это — съедобно. Параллельно с развитием человека как вида, развивались и совершенствовались и способы передачи информации как в синхронном (от человека к человеку) так и в диахронном (из поколения в поколение) виде.</p><p>Появившаяся письменность не только существенно ускорила все виды передачи информации, но также существенно изменила образ мышления человека, позволив преобразовывать накапливаемую за жизнь информацию в некоторую более абстрактную форму, <strong>кодируя</strong> ее определенным образом.</p><p>С тех пор произошла уже не одна научная революция, и ушедший уже XX век подарил нам компьютеры, в первую очередь как очередное изобретение автоматизации, призванное упростить жизнь путем автоматизации процессов работы с информацией.</p><p>Человеческие языки позволяют комбинировать слова великим множеством способов, так, что мы можем сказать очень много разных вещей. Компьютерные языки устроены примерно так же, хотя и менее гибки грамматически.</p><p>Иными словами, компьютер не может &quot;понимать&quot; наш язык, ему требуется транслировать определенный набор команд при помощи языков программирования. Для того чтобы компьютер мог решить поставленную задачу, она должна быть не просто закодирована определенным языком, но и представлена в определенном виде — алгоритмически.</p><p><img src="'+s+'" alt="Абу Абдуллах аль-Хорезми | sm" loading="lazy"><br><em>Абу Абдуллах аль-Хорезми</em></p><p>Отсюда вытекает понятие <strong>алгоритм</strong> (лат. algorithmi — от имени персидского математика Аль-Хорезми, жившего в VIII-IX вв.) — конечная совокупность точно заданных правил решения некоторого класса задач или набор инструкций, описывающих порядок действий исполнителя для решения определённой задачи. В старой трактовке вместо слова «порядок» использовалось слово «последовательность», но по мере развития параллельности в работе компьютеров слово «последовательность» стали заменять более общим словом «порядок». Независимые инструкции могут выполняться в произвольном порядке, параллельно, если это позволяют используемые исполнители.</p><p>Примечательно что изначально слово алгоритм означало искусство счёта с помощью цифр и по одной из версий было получено при переводе трудов Аль-Хорезми с арабского на латынь о решении уравнений.</p><p>В средние века многие купцы при ведении расчетов использовали счетную доску <strong>абак</strong> — праобраз современных счет. А искусство управляться с абаком, а вернее последовательность действий, выполняемая при работе с ним как раз называли алгоритмом, а в Западной Европе учителей арифметики вплоть до XVII века продолжали называть «магистрами абака»</p><p><img src="'+o+'" alt="АБАК | md" loading="lazy"><br><em>Абак</em></p><p>В XVII веке Готфрид Лейбниц впервые использовал слово «алгоритм» (Algorithmo) в ещё более широком смысле: как систематический способ решения проблем дифференциального исчисления.</p><p>Пользовался словом алгоритм и Леонард Эйлер, одна из работ которого так и называется — «Использование нового алгоритма для решения проблемы Пелля», что отражает понимание Эйлером алгоритма как синонима способа решения задачи, что уже близко к современному.</p><p>Несмотря на то что понятие алгоритма относится к первоначальным, основным, базисным понятиям математики, вычислительные процессы алгоритмического характера (арифметические действия над целыми числами, нахождение наибольшего общего делителя двух чисел и т. д.) известны человечеству с глубокой древности, в явном виде понятие алгоритма сформировалось лишь в на рубеже XIX-XX вв.</p><h3 id="что-такое-программирование" tabindex="-1"><a class="header-anchor" href="#что-такое-программирование"><span>Что такое программирование?</span></a></h3><p>Программирование — это написание компьютерного кода для создания программы и решения поставленной задачи. Программы созданы для реализации алгоритмов. Алгоритмы могут быть представлены в виде псевдокода или блок-схемы, а программирование - это их перевод в компьютерную программу.</p><p>Чтобы компьютер что-то сделал, необходимо написать программу, которая точно укажет ему, что и как делать. Если алгоритм был разработан, компьютерная программа будет следовать этому алгоритму, шаг за шагом, что точно скажет компьютеру, что он должен делать.</p><p><img src="'+r+'" alt="Ада Лавлейс | sm" loading="lazy"><br><em>Ада Лавлейс</em></p><p>Примечательно что первым программистом была женщина, баронесса Ада Лавлейс в XIX в. написала алгоритм для вычисления чисел Бернулли на разностной машине Бэббиджа, за что её считают первым программистом в истории.</p><p><img src="'+g+'" alt="Чарльз Бэббидж | sm" loading="lazy"><br><em>Чарльз Бэббидж</em></p><p>Было признано, что это первая программа, специально реализованная для воспроизведения на компьютере, и по этой причине Ада Лавлейс считается первым программистом, несмотря на то, что машина Бэббиджа так и не была построена при жизни Ады.</p><p><img src="'+i+'" alt="Вычислительная машина Бэббиджа | md" loading="lazy"><br><em>Вычислительная машина Бэббиджа</em></p><p>Более того, в своих записях она предрекала, что, подобно тому, как Жаккардов ткацкий станок может ткать цветы и листья, аналитическая машина способна создавать алгебраические формулы, а в перспективе — писать музыку, писать картины — и укажет «науке такие пути, какие нам и не снились».</p><h3 id="что-такое-язык-программирования" tabindex="-1"><a class="header-anchor" href="#что-такое-язык-программирования"><span>Что такое язык программирования?</span></a></h3><p>Язык программирования - это искусственный язык, понятный компьютеру. Язык состоит из серии утверждений, которые формируют инструкции. Эти инструкции говорят компьютеру, что делать.</p><p>Существует много разных языков программирования, существенно отличающихся друг от друга. Среди самых популярных языков:</p><ul><li><img src="https://languages.abranhe.com/languages/python.png" alt="Python | icon-xs" loading="lazy"><br> Python</li><li><img src="https://languages.abranhe.com/languages/cpp.png" alt="C++ | icon-xs" loading="lazy"><br> C++</li><li><img src="https://languages.abranhe.com/languages/csharp.png" alt="C# | icon-xs" loading="lazy"><br> C#</li><li><img src="https://languages.abranhe.com/languages/ruby.png" alt="Ruby | icon-xs" loading="lazy"><br> Ruby</li><li><img src="https://languages.abranhe.com/languages/java.png" alt="Java | icon-xs" loading="lazy"><br> Java</li><li><img src="https://languages.abranhe.com/languages/javascript.png" alt="JavaScript | icon-xs" loading="lazy"><br> JavaScript</li></ul><p>Языки программирования разработаны таким образом, чтобы человеку было легко понять и писать на них. Однако компьютер не может напрямую запускать программы, написанные на этих языках. Большинство языков программирования необходимо преобразовать в машинный код, прежде чем компьютер сможет выполнить описанные инструкции.</p><h3 id="что-же-такое-машинныи-код" tabindex="-1"><a class="header-anchor" href="#что-же-такое-машинныи-код"><span>Что же такое машинный код?</span></a></h3><p>Машинный код — система команд (набор кодов операций) конкретной вычислительной машины, которая интерпретируется непосредственно процессором или микропрограммами этой вычислительной машины.</p><p><img src="'+l+'" alt="Пример машинного кода | md" loading="lazy"><br><em>Пример машинного кода</em></p><p>Компьютерная программа, записанная на машинном языке, состоит из машинных инструкций, каждая из которых представлена в машинном коде в виде т. н. опкода — двоичного кода отдельной операции из системы команд машины. Для удобства программирования вместо числовых опкодов, которые только и понимает процессор, обычно используют их условные буквенные мнемоники. Набор таких мнемоник, вместе с некоторыми дополнительными возможностями (например, некоторыми макрокомандами, директивами), называется языком ассемблера.</p><p>Очевидно что писать программы в машинном коде довольно сложно, и с развитием языков программирования необходимости в подавляющем большинстве случаев в этом нет, однако понимание как компьютер видит и понимает программы помогает программистам составлять более эффективные алгоритмы (в данном контексте, выполняющие соответствующие задачи используя наименьшее необходимое количество ресурсов памяти и/или вычислительной мощности).</p>',36)])])}const u=t(c,[["render",m]]),b=JSON.parse('{"path":"/disciplines/op04/op04_01.html","title":"ОП.04 - 01 - Введение. Алгоритмы и программы","lang":"ru-RU","frontmatter":{"description":"Примечание ЭТО АРХИВНАЯ ВЕРСИЯ КУРСА! Материалы предназначаются для пересдающих дисциплину \\"ОП.04 - Основы алгоритмизации и программирования\\" в соответствии с учебными планами С...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ОП.04 - 01 - Введение. Алгоритмы и программы\\",\\"image\\":[\\"https://languages.abranhe.com/languages/python.png\\",\\"https://languages.abranhe.com/languages/cpp.png\\",\\"https://languages.abranhe.com/languages/csharp.png\\",\\"https://languages.abranhe.com/languages/ruby.png\\",\\"https://languages.abranhe.com/languages/java.png\\",\\"https://languages.abranhe.com/languages/javascript.png\\"],\\"dateModified\\":\\"2025-10-31T12:29:12.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://it.vshp.online/disciplines/op04/op04_01.html"}],["meta",{"property":"og:site_name","content":"Кафедра ИТ"}],["meta",{"property":"og:title","content":"ОП.04 - 01 - Введение. Алгоритмы и программы"}],["meta",{"property":"og:description","content":"Примечание ЭТО АРХИВНАЯ ВЕРСИЯ КУРСА! Материалы предназначаются для пересдающих дисциплину \\"ОП.04 - Основы алгоритмизации и программирования\\" в соответствии с учебными планами С..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://languages.abranhe.com/languages/python.png"}],["meta",{"property":"og:locale","content":"ru-RU"}],["meta",{"property":"og:updated_time","content":"2025-10-31T12:29:12.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-31T12:29:12.000Z"}]]},"git":{"updatedTime":1761913752000,"contributors":[{"name":"PAVEL TKACHEV","username":"","email":"phoenixweiss@ya.ru","commits":1}],"changelog":[{"hash":"a771585bc5911f4a729d06794a6706536be6cc56","time":1761913752000,"email":"phoenixweiss@ya.ru","author":"PAVEL TKACHEV","message":"Update <a href=\\"http://index.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">index.md</a>, abacus.png, ada_lawlace.png, and 105 more files"}]},"autoDesc":true,"filePathRelative":"disciplines/op04/op04_01.md"}');export{u as comp,b as data};
