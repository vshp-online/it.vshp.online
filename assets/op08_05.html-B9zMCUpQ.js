import{_ as l,c as p,b as a,a as t,e,d as o,w as d,r as c,o as i}from"./app-CdTySVJ0.js";const r={},u={class:"hint-container warning"};function m(k,s){const n=c("RouteLink");return i(),p("div",null,[a("div",u,[s[5]||(s[5]=a("p",{class:"hint-container-title"},"Примечание",-1)),s[6]||(s[6]=a("p",null,[a("strong",null,"ЭТО АРХИВНАЯ ВЕРСИЯ КУРСА!")],-1)),a("p",null,[s[1]||(s[1]=e('Материалы предназначаются для пересдающих дисциплину "ОП.08 - Основы проектирования баз данных" в соответствии с учебными планами СПО годов набора ',-1)),s[2]||(s[2]=a("strong",null,"ДО 2024-го",-1)),s[3]||(s[3]=e('. Для того чтобы ознакомиться с актуальным курсом "ИТ.03 - Основы проектирования баз данных" включающим интерактивные примеры, ',-1)),o(n,{to:"/disciplines/it03/"},{default:d(()=>[...s[0]||(s[0]=[e("перейдите по ссылке",-1)])]),_:1}),s[4]||(s[4]=e(".",-1))]),s[7]||(s[7]=a("p",null,"Материалы были перенесены со старого сайта с минимальной доработкой, поэтому не все возможности курса могут работать как ожидается, где-то может слететь форматирование.",-1)),s[8]||(s[8]=a("p",null,[a("strong",null,"Домашние задания в рамках курса проверяться не будут!")],-1))]),s[9]||(s[9]=t(`<h1 id="оп-08-05-базовыи-синтаксис-sql-запроса-на-примере-оператора-select-условныи-оператор-where" tabindex="-1"><a class="header-anchor" href="#оп-08-05-базовыи-синтаксис-sql-запроса-на-примере-оператора-select-условныи-оператор-where"><span>ОП.08 - 05 - Базовый синтаксис SQL запроса на примере оператора <code>SELECT</code>. Условный оператор <code>WHERE</code></span></a></h1><p>Примеры данной темы используют учебную БД:</p><details><summary><b>products_01.sql</b></summary><p><a href="./includes/products_01.sql">products_01.sql</a></p></details><h2 id="базовыи-синтаксис-sql-запроса-на-примере-оператора-select" tabindex="-1"><a class="header-anchor" href="#базовыи-синтаксис-sql-запроса-на-примере-оператора-select"><span>Базовый синтаксис SQL запроса на примере оператора <code>SELECT</code></span></a></h2><p>Одна из основных функций SQL — получение данных из СУБД. Для построения всевозможных запросов к базе данных используется оператор <code>SELECT</code>. Он позволяет выполнять сложные проверки и обработку данных.</p><h3 id="общая-структура-запроса" tabindex="-1"><a class="header-anchor" href="#общая-структура-запроса"><span>Общая структура запроса</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token punctuation">[</span><span class="token keyword">DISTINCT</span> <span class="token operator">|</span> <span class="token keyword">ALL</span><span class="token punctuation">]</span> поля_таблиц_через_запятую</span>
<span class="line"><span class="token keyword">FROM</span> имя_таблицы</span>
<span class="line"><span class="token punctuation">[</span><span class="token keyword">WHERE</span><span class="token punctuation">]</span> условия_на_ограничения_строк</span>
<span class="line"><span class="token punctuation">[</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span><span class="token punctuation">]</span> условия_группировки</span>
<span class="line"><span class="token punctuation">[</span><span class="token keyword">HAVING</span><span class="token punctuation">]</span> условия_на_ограничения_строк_после_группировки</span>
<span class="line"><span class="token punctuation">[</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span><span class="token punctuation">]</span> порядок_сортировки <span class="token punctuation">[</span><span class="token keyword">ASC</span> <span class="token operator">|</span> <span class="token keyword">DESC</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token keyword">LIMIT</span><span class="token punctuation">]</span> ограничение_количества_записей</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>В описанной структуре запроса необязательные параметры указаны в квадратных скобках.</p><p>При построении SQL-запросов важно не только соблюдать правильность синтаксиса в написании команд, но и строго следовать порядку в котором они перечисляются.</p><p>Фактическое выполнение инструкций определяется СУБД и порядок из этого списка может значительно отличаться.</p><h3 id="параметры-оператора" tabindex="-1"><a class="header-anchor" href="#параметры-оператора"><span>Параметры оператора</span></a></h3><ul><li><code>DISTINCT</code> используется для исключения повторяющихся строк из результата</li><li><code>ALL</code> (по умолчанию) используется для получения всех данных, в том числе и повторений</li><li><code>FROM</code> перечисляет используемые в запросе таблицы из базы данных</li><li><code>WHERE</code> — это условный оператор, который используется для ограничения строк по какому-либо условию</li><li><code>GROUP BY</code> используется для группировки строк</li><li><code>HAVING</code> применяется после группировки строк для фильтрации по значениям агрегатных функций</li><li><code>ORDER BY</code> используется для сортировки. У него есть два параметра:</li><li><code>ASC</code> (по умолчанию) используется для сортировки по возрастанию<br><code>DESC</code> — по убыванию</li><li><code>LIMIT</code> используется для ограничения количества строк для вывода</li></ul><h3 id="примеры-использования" tabindex="-1"><a class="header-anchor" href="#примеры-использования"><span>Примеры использования</span></a></h3><p>Вы можете выводить любые строки и числа вместо столбцов:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token string">&quot;Просто строка&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Для того, чтобы вывести все данные из таблицы <code>products</code>, вы можете использовать символ «*», который буквально означает «все столбцы»:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>products<span class="token punctuation">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Вы можете вывести любой столбец, определённый в таблице, например, <code>name</code> из таблицы <code>products</code>:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> name <span class="token keyword">FROM</span> products<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Также вы можете вывести несколько столбцов. Для этого их нужно перечислить через запятую:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> count<span class="token punctuation">,</span> price <span class="token keyword">FROM</span> products<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Для того чтобы ограничить количество строк в ответе сервера используют модификатор <code>LIMIT</code>, например, если в БД довольно много строк, но нам нужно получить только первые <code>10</code>, запрос будет следующим:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products <span class="token keyword">LIMIT</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>[!INFO]<br> В <strong>MySQL Workbench</strong> и многих подобных клиентах по-умолчанию на любой запрос <code>SELECT</code> устанавливается ограничение <code>LIMIT 1000</code>. Это ограничение легко меняется или отключается через интерфейс программы.</p></blockquote><h3 id="комментарии" tabindex="-1"><a class="header-anchor" href="#комментарии"><span>Комментарии</span></a></h3><p>Комментарии в SQL-запросах - это текстовые строки, которые добавляются в код запроса для описания его функциональности. Они могут быть полезны при работе с большими базами данных или при совместной работе над проектом.</p><p>Комментарии могут быть однострочными или многострочными. Однострочные комментарии начинаются со знака двойного дефиса (<code>--</code>), а многострочные заключаются в символы <code>/*</code> и <code>*/</code>.</p><p>Вот пример однострочного комментария:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token comment">-- Этот запрос выбирает всех пользователей старше 18 лет</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> users <span class="token keyword">WHERE</span> age <span class="token operator">&gt;=</span> <span class="token number">18</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>А вот пример многострочного комментария:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token comment">/*</span>
<span class="line">  Этот запрос выбирает все заказы,</span>
<span class="line">  связывает их с клиентами по первичным ключам</span>
<span class="line">  и фильтрует клиентов только из РФ</span>
<span class="line">*/</span></span>
<span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> orders</span>
<span class="line"><span class="token keyword">JOIN</span> customers <span class="token keyword">ON</span> orders<span class="token punctuation">.</span>customer_id <span class="token operator">=</span> customers<span class="token punctuation">.</span>id</span>
<span class="line"><span class="token keyword">WHERE</span> customers<span class="token punctuation">.</span>country <span class="token operator">=</span> <span class="token string">&#39;РФ&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Комментарии могут использоваться для описания цели запроса, объяснения сложных операций, указания авторства запроса и т.д. Они помогают другим разработчикам быстрее понимать код и ускоряют процесс разработки и отладки.</p><p>Однако, следует помнить, что комментарии не должны быть избыточными и не должны содержать конфиденциальную информацию. Также, при написании комментариев следует следить за грамматикой и стилем написания.</p><p>Использование комментариев в SQL-запросах является хорошей практикой программирования. Они помогают другим разработчикам быстрее понимать код и ускоряют процесс разработки и отладки.</p><h3 id="алиасы-псевдонимы" tabindex="-1"><a class="header-anchor" href="#алиасы-псевдонимы"><span>Алиасы (псевдонимы)</span></a></h3><p>Алиасы (или как часто называют — псевдонимы) в SQL-запросах - это сокращенные названия, которые можно использовать для обращения к таблицам и столбцам в запросах. Они упрощают написание запросов и делают их более читаемыми.</p><p>Например, при написании запросов с использованием нескольких таблиц, можно задать алиасы для каждой из них, чтобы сократить количество символов при обращении к ним в запросе. Также можно задать алиасы для столбцов, чтобы изменить их названия в выводе запроса.</p><p>Пример использования алиасов для таблиц:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> customers <span class="token keyword">AS</span> cus</span>
<span class="line"><span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> orders <span class="token keyword">AS</span> ord</span>
<span class="line"><span class="token keyword">ON</span> cus<span class="token punctuation">.</span>customer_id <span class="token operator">=</span> ord<span class="token punctuation">.</span>customer_id</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Здесь мы задаем алиасы для таблиц <code>customers</code> и <code>orders</code>, чтобы сократить количество символов при обращении к ним в запросе.</p><p>Пример использования алиасов для столбцов:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span></span>
<span class="line">  customer_name <span class="token keyword">AS</span> name<span class="token punctuation">,</span></span>
<span class="line">  order_date <span class="token keyword">AS</span> <span class="token keyword">date</span></span>
<span class="line"><span class="token keyword">FROM</span> customers<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Здесь мы задаем алиасы для столбцов customer_name и order_date, чтобы изменить их названия в выводе запроса.</p><p>Использование алиасов упрощает написание запросов и делает их более читаемыми, особенно если в запросе используется много таблиц и столбцов. Однако, не следует злоупотреблять алиасами, так как это может привести к путанице и усложнению запросов.</p><h2 id="условныи-оператор-where" tabindex="-1"><a class="header-anchor" href="#условныи-оператор-where"><span>Условный оператор <code>WHERE</code></span></a></h2><p>Ситуация, когда требуется сделать выборку по определенному условию, встречается очень часто. Для этого в операторе <code>SELECT</code> существует параметр <code>WHERE</code>, после которого следует условие для ограничения строк. Если запись удовлетворяет этому условию, то попадает в результат, иначе отбрасывается.</p><p>Общая структура запроса с оператором WHERE</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> поля_таблиц_через_запятую <span class="token keyword">FROM</span> имя_таблицы</span>
<span class="line"><span class="token keyword">WHERE</span> условия_на_ограничения_строк<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>В условном операторе применяются операторы сравнения, специальные и логические операторы.</p><h3 id="операторы-сравнения" tabindex="-1"><a class="header-anchor" href="#операторы-сравнения"><span>Операторы сравнения</span></a></h3><p>Операторы сравнения служат для сравнения двух выражений, их результатом может являться <code>ИСТИНА</code> (1), <code>ЛОЖЬ</code> (0) и <code>NULL</code>.</p><p>Результат сравнения с <code>NULL</code> является <code>NULL</code>. Исключением является оператор эквивалентности.</p><table><thead><tr><th style="text-align:center;">Оператор</th><th style="text-align:left;">Описание</th></tr></thead><tbody><tr><td style="text-align:center;"><code>=</code></td><td style="text-align:left;">Оператор равенства</td></tr><tr><td style="text-align:center;"><code>&lt;=&gt;</code></td><td style="text-align:left;">Оператор эквивалентности, аналогичный оператору равенства, с одним исключением: в отличии от оператора равенства, оператор эквивалентности вернёт <code>ИСТИНУ</code> при сравнении <code>NULL &lt;=&gt; NULL</code></td></tr><tr><td style="text-align:center;"><code>&lt;&gt;</code> или <code>!=</code></td><td style="text-align:left;">Оператор неравенства</td></tr><tr><td style="text-align:center;"><code>&lt;</code></td><td style="text-align:left;">Оператор строго меньше</td></tr><tr><td style="text-align:center;"><code>&lt;=</code></td><td style="text-align:left;">Оператор меньше или равно</td></tr><tr><td style="text-align:center;"><code>&gt;</code></td><td style="text-align:left;">Оператор строго больше</td></tr><tr><td style="text-align:center;"><code>&gt;=</code></td><td style="text-align:left;">Оператор больше или равно</td></tr></tbody></table><h3 id="логические-операторы" tabindex="-1"><a class="header-anchor" href="#логические-операторы"><span>Логические операторы</span></a></h3><p>Логические операторы необходимы для связывания нескольких условий ограничения строк.</p><ul><li>Оператор <code>NOT</code> — меняет значение специального оператора на противоположный</li><li>Оператор <code>OR</code> — общее значение выражения истинно, если хотя бы одно из них истинно</li><li>Оператор <code>AND</code> — общее значение выражения истинно, если они оба истинны</li><li>Оператор <code>XOR</code> — общее значение выражения истинно, если один и только один аргумент является истинным</li></ul><p>Выведем все товары, количество которых на складе больше <code>0</code> и при этом цена меньше <code>5000</code> включительно:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products</span>
<span class="line"><span class="token keyword">WHERE</span> count <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">AND</span> <span class="token operator">NOT</span> price <span class="token operator">&lt;=</span> <span class="token number">5000</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Логическим операторам более подробно будет посвящена отдельная тема.</p><h3 id="специальные-операторы" tabindex="-1"><a class="header-anchor" href="#специальные-операторы"><span>Специальные операторы</span></a></h3><p>Существует несколько специальных операторов, которые предназначены для проверки особых условий которыми могут удовлетворять или не удовлетворять объекты данных. Большинство из них мы рассмотрим в рамках отдельных тем, а сейчас упомянем наиболее простой — <code>IS [NOT] NULL</code>.</p><p><code>IS [NOT] NULL</code> — позволяет узнать равно ли проверяемое значение <code>NULL</code>.</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> имя_таблицы</span>
<span class="line"><span class="token keyword">WHERE</span> столбец <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>Специальным операторам более подробно будет посвящена отдельная тема.</p><h2 id="задания-для-самопроверки" tabindex="-1"><a class="header-anchor" href="#задания-для-самопроверки"><span>Задания для самопроверки</span></a></h2><h3 id="задание-1" tabindex="-1"><a class="header-anchor" href="#задание-1"><span>Задание 1</span></a></h3><p>Получите всю информацию о товарах из таблицы <code>products</code>.</p><details><summary><b>ОТВЕТ</b></summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><h3 id="задание-2" tabindex="-1"><a class="header-anchor" href="#задание-2"><span>Задание 2</span></a></h3><p>Получите название (<code>name</code>) и цену (<code>price</code>) всех товаров из таблицы <code>products</code>.</p><details><summary><b>ОТВЕТ</b></summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> price <span class="token keyword">FROM</span> products<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><h3 id="задание-3" tabindex="-1"><a class="header-anchor" href="#задание-3"><span>Задание 3</span></a></h3><p>Выберите из таблицы <code>products</code> все записи, в которых цена (<code>price</code>) меньше <code>3000</code>.</p><details><summary><b>ОТВЕТ</b></summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> products <span class="token keyword">WHERE</span> price <span class="token operator">&lt;</span> <span class="token number">3000</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><h3 id="задание-4" tabindex="-1"><a class="header-anchor" href="#задание-4"><span>Задание 4</span></a></h3><p>Выберите из таблицы <code>products</code> имена (<code>name</code>) и цены (<code>price</code>) всех товаров, стоимостью от <code>10000</code> и выше.</p><details><summary><b>ОТВЕТ</b></summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> price <span class="token keyword">FROM</span> products <span class="token keyword">WHERE</span> price <span class="token operator">&gt;=</span> <span class="token number">10000</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><h3 id="задание-5" tabindex="-1"><a class="header-anchor" href="#задание-5"><span>Задание 5</span></a></h3><p>Получите из таблицы <code>products</code> имена (<code>name</code>) товаров, которые закончились.</p><details><summary><b>ОТВЕТ</b></summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> name <span class="token keyword">FROM</span> products <span class="token keyword">WHERE</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><h3 id="задание-6" tabindex="-1"><a class="header-anchor" href="#задание-6"><span>Задание 6</span></a></h3><p>Выберите из таблицы products название (<code>name</code>) и цены (<code>price</code>) товаров, стоимостью до <code>4000</code> включительно.</p><details><summary><b>ОТВЕТ</b></summary><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> price <span class="token keyword">FROM</span> products <span class="token keyword">WHERE</span> price <span class="token operator">&lt;=</span> <span class="token number">4000</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details>`,83))])}const g=l(r,[["render",m]]),v=JSON.parse('{"path":"/disciplines/op08/op08_05.html","title":"ОП.08 - 05 - Базовый синтаксис SQL запроса на примере оператора SELECT. Условный оператор WHERE","lang":"ru-RU","frontmatter":{"description":"Примечание ЭТО АРХИВНАЯ ВЕРСИЯ КУРСА! Материалы предназначаются для пересдающих дисциплину \\"ОП.08 - Основы проектирования баз данных\\" в соответствии с учебными планами СПО годов...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ОП.08 - 05 - Базовый синтаксис SQL запроса на примере оператора SELECT. Условный оператор WHERE\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-31T15:45:09.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://it.vshp.online/disciplines/op08/op08_05.html"}],["meta",{"property":"og:site_name","content":"Кафедра ИТ"}],["meta",{"property":"og:title","content":"ОП.08 - 05 - Базовый синтаксис SQL запроса на примере оператора SELECT. Условный оператор WHERE"}],["meta",{"property":"og:description","content":"Примечание ЭТО АРХИВНАЯ ВЕРСИЯ КУРСА! Материалы предназначаются для пересдающих дисциплину \\"ОП.08 - Основы проектирования баз данных\\" в соответствии с учебными планами СПО годов..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ru-RU"}],["meta",{"property":"og:updated_time","content":"2025-10-31T15:45:09.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-31T15:45:09.000Z"}]]},"git":{"updatedTime":1761925509000,"contributors":[{"name":"PAVEL TKACHEV","username":"","email":"phoenixweiss@ya.ru","commits":2}],"changelog":[{"hash":"799f1f79d8c5d9f1b4401f594c1135b605f001ab","time":1761925509000,"email":"phoenixweiss@ya.ru","author":"PAVEL TKACHEV","message":"Update op04_08.md, op04_09.md, op04_10.md, and 24 more files"},{"hash":"a771585bc5911f4a729d06794a6706536be6cc56","time":1761913752000,"email":"phoenixweiss@ya.ru","author":"PAVEL TKACHEV","message":"Update <a href=\\"http://index.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">index.md</a>, abacus.png, ada_lawlace.png, and 105 more files"}]},"autoDesc":true,"filePathRelative":"disciplines/op08/op08_05.md"}');export{g as comp,v as data};
