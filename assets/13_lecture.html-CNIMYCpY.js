import{_ as t,c as p,a,o}from"./app-DHbqBNxu.js";const r={};function n(c,e){return o(),p("div",null,[...e[0]||(e[0]=[a('<h1 id="мдк-11-01-13-денормализация-базы-данных" tabindex="-1"><a class="header-anchor" href="#мдк-11-01-13-денормализация-базы-данных"><span>МДК.11.01 - 13 - Денормализация базы данных</span></a></h1><p>Сегодня мы с Вами подробно рассмотрим процесс денормализации базы данных, Вы узнаете, что такое денормализация, как и зачем вообще проводить эту денормализацию.</p><h2 id="денормализация" tabindex="-1"><a class="header-anchor" href="#денормализация"><span><strong>Денормализация</strong></span></a></h2><p>Ранее мы выяснили, что данные в базе данных хранятся в таблицах, иными словами, база данных — это набор таблиц.</p><p>Суть проектирования правильной базы данных заключается в том, что необходимо сформировать тот набор таблиц, который будет отражать предметную область и соответствовать требованиям этой предметной области и требованиям разрабатываемой системы.</p><p>Проще говоря, необходимо сделать так, чтобы сформированные таблицы можно было удобно и эффективно использовать в работе, они не должны содержать каких-то аномалий и противоречивых данных, именно это и является целью проектирования базы данных.</p><p>В процессе проектирования базы данных нам на помощь приходит нормализация, которая помогает привести базу данных к тому состоянию, которое будет удовлетворять в первую очередь нашим требованиям, т.е. требованиям предметной области и требованиям разрабатываемой системы.</p><p>Иными словами, нормализация — это не процесс целенаправленного приведения базы данных к какой-то определенной нормальной форме, нормализация — это набор принципов, зная и следуя которым, мы можем спроектировать базу данных, структура которой будет гарантировать нам отсутствие определенного рода аномалий.</p><p>Таким образом, нет требования, которое обязывало бы нас приводить базу данных к максимально возможной нормальной форме, например, к 5 или 6, и не нужно нормализовать базу данных только для того, чтобы она была нормализована.</p><p>Максимально нормализованная база данных — это плохая база данных.</p><p>Дело в том, что нормализация базы данных до 5 или 6 нормальной формы значительно снижает производительность, работа с такой базой будет неэффективна и неудобна, а управлять ей будет очень сложно.</p><p>Поэтому разработчики с целью нахождения компромисса между устранением аномалий и повышением производительности могут не выполнять требования той или иной нормальной формы, более того, они могут прибегать к так называемой денормализации, т.е. обратному процессу нормализации.</p><blockquote><p>Денормализация — намеренное приведение структуры базы данных в состояние, не удовлетворяющее требованиям нормализации.</p></blockquote><p>Денормализация обычно проводится путем добавления избыточных данных в таблицу, т.е. тех данных, которые по требованиям той или иной нормальной формы должны выноситься в отдельную таблицу.</p><p>Например, в процессе эксплуатации базы данных у Вас возникла необходимость добавить новую характеристику, однако по требованиям определенной нормальной формы Вы должны под эту характеристику создать новую таблицу, однако требования предметной области и требования разрабатываемой системы позволяют этого не делать, при этом Вы четко понимаете, что невынесение этих данных в отдельную таблицу положительно скажется на эксплуатации базы данных. В этом случае Вы выполняете как раз денормализацию.</p><p>Также денормализация проводится и в процессе проектирования базы данных, например, когда по требованиям той или иной нормальной формы Вы должны выполнить декомпозицию таблицы, а Вы ее намерено не выполняете, все по тем же причинам, т.е. это удовлетворяет Вашим требованиям.</p><h2 id="методика-нормализации-базы-данных" tabindex="-1"><a class="header-anchor" href="#методика-нормализации-базы-данных"><span><strong>Методика нормализации базы данных</strong></span></a></h2><p>Существует методика нормализации, которая поможет Вам спроектировать достаточно хорошую базу данных. Суть ее в следующем.</p><p>Вы проектируете базу данных в соответствии с требованиями предметной области и требованиями разрабатываемой системы, при этом Вы строго соблюдаете все принципы нормализации и приводите базу данных практически к максимально возможной в Вашем случае нормальной форме.</p><p>В итоге Вы получаете базу данных, которая по идее не будет содержать аномалий. Однако такая версия базы данных скорей всего будет иметь не очень хорошую производительность, и с ней не очень удобно будет работать.</p><p>Поэтому затем Вы анализируете полученную структуру и руководствуясь здравым смыслом выявляете таблицы, которые можно было бы не декомпозировать, и никаких требований предметной области, которые обязывали бы делать такую декомпозицию, нет.</p><p>И таким образом, Вы выполняете денормализацию.</p><p>В конечном итоге Вы получите базу данных, в которой будет минимум аномалий, и при этом она будет иметь хорошую производительность.</p><p>Поэтому процесс проектирования базы данных иногда называют процессом нахождения компромисса между нормализацией и денормализацией, т.е. между устранением аномалий и повышением производительности.</p><p>Дело в том, что компромисс между этими составляющими даст наилучший результат, т.е. наилучшую базу данных, в каждом конкретном случае, в каждой предметной области, т.е. нормализация, как это уже не раз было отмечено, зависит от требований предметной области и требований разрабатываемой системы.</p><p>Отсюда мы можем сформулировать определение хорошей базы данных.</p><blockquote><p>Хорошая база данных — это база, которая достаточно нормализована, чтобы не создавать аномалии для пользователей этой базы данных, в то же время она достаточно денормализована, чтобы иметь хорошую производительность.</p></blockquote><p>Единственное, следует отметить, что в общей практике 3 нормальная форма является как раз тем компромиссом между отсутствием аномалий и приемлемой производительностью, поэтому база данных, находящаяся в третьей нормальной форме, считается достаточно нормализованной, и ее принципы все-таки рекомендовано соблюдать.</p>',28)])])}const i=t(r,[["render",n]]),l=JSON.parse('{"path":"/disciplines/mdk1101/lectures/13_lecture.html","title":"МДК.11.01 - 13 - Денормализация базы данных","lang":"ru-RU","frontmatter":{"description":"МДК.11.01 - 13 - Денормализация базы данных Сегодня мы с Вами подробно рассмотрим процесс денормализации базы данных, Вы узнаете, что такое денормализация, как и зачем вообще пр...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"МДК.11.01 - 13 - Денормализация базы данных\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-17T10:47:46.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://it.vshp.online/disciplines/mdk1101/lectures/13_lecture.html"}],["meta",{"property":"og:site_name","content":"Кафедра ИТ"}],["meta",{"property":"og:title","content":"МДК.11.01 - 13 - Денормализация базы данных"}],["meta",{"property":"og:description","content":"МДК.11.01 - 13 - Денормализация базы данных Сегодня мы с Вами подробно рассмотрим процесс денормализации базы данных, Вы узнаете, что такое денормализация, как и зачем вообще пр..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ru-RU"}],["meta",{"property":"og:updated_time","content":"2025-09-17T10:47:46.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-17T10:47:46.000Z"}]]},"git":{"updatedTime":1758106066000,"contributors":[{"name":"PAVEL TKACHEV","username":"","email":"phoenixweiss@ya.ru","commits":1}],"changelog":[{"hash":"f4a1c832c0dd13beccf432aed9f3c15753dd22b1","time":1758106066000,"email":"phoenixweiss@ya.ru","author":"PAVEL TKACHEV","message":"Добавил лекции в МДК.11.01"}]},"autoDesc":true,"filePathRelative":"disciplines/mdk1101/lectures/13_lecture.md"}');export{i as comp,l as data};
