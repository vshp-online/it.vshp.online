import{_ as e,c as r,a as d,o as a}from"./app-CdTySVJ0.js";const n={};function o(i,t){return a(),r("div",null,[...t[0]||(t[0]=[d('<h1 id="мдк-11-01-04-первая-нормальная-форма-1nf-базы-данных" tabindex="-1"><a class="header-anchor" href="#мдк-11-01-04-первая-нормальная-форма-1nf-базы-данных"><span>МДК.11.01 - 04 - Первая нормальная форма (1NF) базы данных</span></a></h1><p>Сегодня мы с Вами поговорим о первой нормальной форме базы данных, в частности Вы узнаете, какие требования предъявляются к таблицам, чтобы база данных находилась в первой нормальной форме, и для наглядности мы, конечно же, рассмотрим пример.</p><p>Перед тем как переходить к процессу приведения таблиц базы данных к первой нормальной форме, необходимо чтобы эти таблицы соблюдали базовые принципы реляционной теории, подробнее об этом мы говорили в материале, который посвящен нулевой нормальной форме (UNF) или, как ее еще называют, — ненормализованной форме.</p><p>После того как таблицы приведены к правильному табличному виду, мы можем начинать процесс нормализации.</p><h2 id="требования-первои-нормальнои-формы-1nf" tabindex="-1"><a class="header-anchor" href="#требования-первои-нормальнои-формы-1nf"><span><strong>Требования первой нормальной формы (1NF)</strong></span></a></h2><p>Требование первой нормальной формы (1NF) очень простое и оно заключается в том, чтобы таблицы соответствовали реляционной модели данных и соблюдали определённые реляционные принципы.</p><p>Таким образом, чтобы база данных находилась в 1 нормальной форме, необходимо чтобы ее таблицы соблюдали следующие реляционные принципы:</p><ul><li>В таблице не должно быть дублирующих строк</li><li>В каждой ячейке таблицы хранится атомарное значение (одно не составное значение)</li><li>В столбце хранятся данные одного типа</li><li>Отсутствуют массивы и списки в любом виде</li></ul><h2 id="пример-приведения-таблицы-к-первои-нормальнои-форме" tabindex="-1"><a class="header-anchor" href="#пример-приведения-таблицы-к-первои-нормальнои-форме"><span><strong>Пример приведения таблицы к первой нормальной форме</strong></span></a></h2><p>Следующая таблица не находится даже в первой нормальной форме, так как у нас есть дублирующие строки (John Smith), а в некоторых ячейках хранятся списки значений (<em>каждый номер телефона — это одно значение</em>).</p><h3 id="таблица-сотрудников-в-ненормализованном-виде" tabindex="-1"><a class="header-anchor" href="#таблица-сотрудников-в-ненормализованном-виде"><span><em>Таблица сотрудников в ненормализованном виде</em></span></a></h3><table><thead><tr><th>Сотрудник</th><th>Контакт</th></tr></thead><tbody><tr><td>Иванов И.И.</td><td>123-456-789, 987-654-321</td></tr><tr><td>Сергеев С.С.</td><td>Рабочий телефон 555-666-777, Домашний телефон 777-888-999</td></tr><tr><td>John Smith</td><td>123-456-789</td></tr><tr><td>John Smith</td><td>123-456-789</td></tr></tbody></table><p>Чтобы привести эту таблицу к первой нормальной форме, необходимо удалить дублирующие строки, в ячейках хранить один номер телефона, а не список, а тип телефона (<em>домашний или рабочий</em>) вынести в отдельный столбец, так как столбцы хранят структурную информацию.</p><h3 id="таблица-сотрудников-в-первои-нормальнои-форме" tabindex="-1"><a class="header-anchor" href="#таблица-сотрудников-в-первои-нормальнои-форме"><span><em>Таблица сотрудников в первой нормальной форме</em></span></a></h3><table><thead><tr><th>Сотрудник</th><th>Телефон</th><th>Тип телефона</th></tr></thead><tbody><tr><td>Иванов И.И.</td><td>123-456-789</td><td></td></tr><tr><td>Иванов И.И.</td><td>987-654-321</td><td></td></tr><tr><td>Сергеев С.С.</td><td>555-666-777</td><td>Рабочий телефон</td></tr><tr><td>Сергеев С.С.</td><td>777-888-999</td><td>Домашний телефон</td></tr><tr><td>John Smith</td><td>123-456-789</td><td></td></tr></tbody></table><p>Таким образом, главное правило первой нормальной формы звучит следующим образом</p><blockquote><p>Строки, столбцы и ячейки в таблицах необходимо использовать строго по назначению.</p></blockquote><ul><li>Назначение строк — хранить данные</li><li>Назначение столбцов — хранить структурную информацию</li><li>Назначение ячеек — хранить атомарное значение</li></ul><p>Т.е. если ячейка таблицы по реляционной теории должна хранить одно атомарное значение, не нужно записывать в ячейку какой-то список значений или составное значение. Также не нужно создавать строки, которые уже есть в таблице и хранить в столбце значения разных типов данных.</p><p>На основе всего вышеизложенного можно сделать следующий вывод.</p><p>Если таблица создана с соблюдением всех реляционных принципов, значит, она уже находится в первой нормальной форме, таким образом, по сути абсолютно все реляционные таблицы находятся в первой нормальной форме. Если таблица создана без учета реляционных принципов, значит эта таблица не является реляционной.</p><p>После того как мы привели таблицы базы данных к первой нормальной форме, мы можем переходить к приведению таблиц до второй нормальной формы (2NF). Описание, требования и пример приведения таблиц до второй нормальной формы мы рассмотрим в следующем материале.</p>',22)])])}const l=e(n,[["render",o]]),h=JSON.parse('{"path":"/disciplines/mdk1101/lectures/04_lecture.html","title":"МДК.11.01 - 04 - Первая нормальная форма (1NF) базы данных","lang":"ru-RU","frontmatter":{"description":"МДК.11.01 - 04 - Первая нормальная форма (1NF) базы данных Сегодня мы с Вами поговорим о первой нормальной форме базы данных, в частности Вы узнаете, какие требования предъявляю...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"МДК.11.01 - 04 - Первая нормальная форма (1NF) базы данных\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-11T07:03:08.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://it.vshp.online/disciplines/mdk1101/lectures/04_lecture.html"}],["meta",{"property":"og:site_name","content":"Кафедра ИТ"}],["meta",{"property":"og:title","content":"МДК.11.01 - 04 - Первая нормальная форма (1NF) базы данных"}],["meta",{"property":"og:description","content":"МДК.11.01 - 04 - Первая нормальная форма (1NF) базы данных Сегодня мы с Вами поговорим о первой нормальной форме базы данных, в частности Вы узнаете, какие требования предъявляю..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ru-RU"}],["meta",{"property":"og:updated_time","content":"2025-09-11T07:03:08.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-11T07:03:08.000Z"}]]},"git":{"updatedTime":1757574188000,"contributors":[{"name":"PAVEL TKACHEV","username":"","email":"phoenixweiss@ya.ru","commits":1}],"changelog":[{"hash":"75052fcfb4f88dadf7d2f78919a2540f6402543d","time":1757574188000,"email":"phoenixweiss@ya.ru","author":"PAVEL TKACHEV","message":"Update <a href=\\"http://index.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">index.md</a>, 03_lecture.md, 04_lecture.md, and 2 more files"}]},"autoDesc":true,"filePathRelative":"disciplines/mdk1101/lectures/04_lecture.md"}');export{l as comp,h as data};
