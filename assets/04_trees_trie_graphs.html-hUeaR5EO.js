import{_ as t,c as a,a as i,o as r}from"./app-TjX1P9Ye.js";const n={};function p(s,e){return r(),a("div",null,[...e[0]||(e[0]=[i('<h1 id="_05-—-деревья-bst-trie-и-графы-ориентированные-неориентированные-матрицы-смежности" tabindex="-1"><a class="header-anchor" href="#_05-—-деревья-bst-trie-и-графы-ориентированные-неориентированные-матрицы-смежности"><span>05 — Деревья (BST, Trie) и графы (ориентированные/неориентированные, матрицы смежности)</span></a></h1><div class="hint-container warning"><p class="hint-container-title">Примечание</p><p>Раздел находится в процессе наполнения!</p></div><h2 id="двоичное-дерево-поиска-binary-search-tree" tabindex="-1"><a class="header-anchor" href="#двоичное-дерево-поиска-binary-search-tree"><span>Двоичное дерево поиска (Binary search tree)</span></a></h2><p>Дерево — это структура, данные в которой лежат в узлах. У каждого узла могут быть один или несколько дочерних и только один родитель, то есть они расходятся, как ветви дерева:</p><figure><img src="https://avatars.mds.yandex.net/get-lpc/1364677/566d4412-bca7-4185-af9a-ed89e9e1bfc1/width_1920_q80" alt="Структура дерева" tabindex="0" loading="lazy"><figcaption>Структура дерева</figcaption></figure><p>Деревья бывают разных типов, но наиболее распространены двоичные деревья поиска. У них есть следующие особенности:</p><ul><li>У каждого узла не больше двух дочерних.</li><li>Если новое значение меньше, оно становится левым дочерним либо дочерним левого дочернего.</li><li>Если значение больше, оно становится правым дочерним или дочерним правого дочернего.</li></ul><p>Как применяют двоичные деревья:</p><ul><li>Для быстрого поиска данных.</li><li>Для хранения данных в отсортированном виде с возможностью быстро их добавлять и удалять.</li></ul><h2 id="префиксное-дерево-trie" tabindex="-1"><a class="header-anchor" href="#префиксное-дерево-trie"><span>Префиксное дерево (Trie)</span></a></h2><p>Другие названия этой структуры данных — Бор и нагруженное дерево. Данные в нём хранятся последовательно: каждый узел — это префикс, по которому находятся следующие узлы.</p><p>Как применяют префиксные деревья:</p><ul><li>Для хранения данных, которые нужно выдавать по цепочке. Например, слова для функции автозаполнения в телефоне: в зависимости от одной набранной буквы дерево выдаёт следующие.</li><li>Для хранения данных, у которых есть повторяющиеся участки. Например IP-адресов.</li></ul><figure><img src="https://avatars.mds.yandex.net/get-lpc/1674605/2c17e2e7-c155-4bb9-9477-c91dc6a3499e/width_1920_q80" alt="Структура префиксного дерева" tabindex="0" loading="lazy"><figcaption>Структура префиксного дерева</figcaption></figure><p>Пример хранения слов в префиксном дереве. Звёздочки означают конец префикса.</p><h2 id="граф-graph" tabindex="-1"><a class="header-anchor" href="#граф-graph"><span>Граф (Graph)</span></a></h2><p>Граф — это более общий случай дерева. Иногда деревья называют ациклическими графами. Отличий у этих структур данных два:</p><ul><li>В графе возможны циклы, то есть «ребёнок» может быть «родителем» для того же элемента.</li><li>Рёбра тоже могут нести смысловую нагрузку, то есть нужно сохранять их значения.</li></ul><p>Графы бывают ориентированные и неориентированные. У первых рёбра между узлами имеют направление, так что порядок элементов важен. У вторых направлений нет, и элементы можно читать и обходить в любом порядке.</p><figure><img src="https://avatars.mds.yandex.net/get-lpc/403342/438f6cff-1cd3-4067-bb89-15c339dbe4c1/width_1920_q80" alt="Виды графов" tabindex="0" loading="lazy"><figcaption>Виды графов</figcaption></figure><p>У ориентированных графов важен порядок элементов, у неориентированных ― элементы можно менять местами.</p><p>Графы часто представляют в виде матрицы смежности.</p><figure><img src="https://avatars.mds.yandex.net/get-lpc/1531919/6d8ff372-4991-471d-9e8f-dd4c58f0f24b/width_1920_q80" alt="Матрица смежности" tabindex="0" loading="lazy"><figcaption>Матрица смежности</figcaption></figure><p>Здесь каждая строка или столбец — узел. 1 в ячейке означает, что между узлами есть связь, 0 — что связи нет. Если у связей, то есть рёбер графа, есть вес, он как раз может быть помещён в ячейку</p><p>Как применяют графы:</p><ul><li>Для хранения информации, связанной друг с другом сложными соотношениями.</li><li>Для анализа соотносящейся друг с другом информации.</li><li>Для построения маршрута из точки А в точку Б.</li></ul><p>Структуру данных для работы выбирают в зависимости от задачи. Если нужно что-то простое, подойдёт обычный массив. Когда требуется создать очередь или историю запросов, выбирают связный список или очередь. Если нужен поиск и сортировка, поможет двоичное дерево. Именно поэтому важно знать все типы данных в программировании, чтобы подбирать оптимальный в любой ситуации.</p>',27)])])}const d=t(n,[["render",p]]),l=JSON.parse('{"path":"/disciplines/up01/lectures/04_trees_trie_graphs.html","title":"05 — Деревья (BST, Trie) и графы (ориентированные/неориентированные, матрицы смежности)","lang":"ru-RU","frontmatter":{"description":"05 — Деревья (BST, Trie) и графы (ориентированные/неориентированные, матрицы смежности) Примечание Раздел находится в процессе наполнения! Двоичное дерево поиска (Binary search ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"05 — Деревья (BST, Trie) и графы (ориентированные/неориентированные, матрицы смежности)\\",\\"image\\":[\\"https://avatars.mds.yandex.net/get-lpc/1364677/566d4412-bca7-4185-af9a-ed89e9e1bfc1/width_1920_q80\\",\\"https://avatars.mds.yandex.net/get-lpc/1674605/2c17e2e7-c155-4bb9-9477-c91dc6a3499e/width_1920_q80\\",\\"https://avatars.mds.yandex.net/get-lpc/403342/438f6cff-1cd3-4067-bb89-15c339dbe4c1/width_1920_q80\\",\\"https://avatars.mds.yandex.net/get-lpc/1531919/6d8ff372-4991-471d-9e8f-dd4c58f0f24b/width_1920_q80\\"],\\"dateModified\\":\\"2025-10-26T22:04:25.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://it.vshp.online/disciplines/up01/lectures/04_trees_trie_graphs.html"}],["meta",{"property":"og:site_name","content":"Кафедра ИТ"}],["meta",{"property":"og:title","content":"05 — Деревья (BST, Trie) и графы (ориентированные/неориентированные, матрицы смежности)"}],["meta",{"property":"og:description","content":"05 — Деревья (BST, Trie) и графы (ориентированные/неориентированные, матрицы смежности) Примечание Раздел находится в процессе наполнения! Двоичное дерево поиска (Binary search ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://avatars.mds.yandex.net/get-lpc/1364677/566d4412-bca7-4185-af9a-ed89e9e1bfc1/width_1920_q80"}],["meta",{"property":"og:locale","content":"ru-RU"}],["meta",{"property":"og:updated_time","content":"2025-10-26T22:04:25.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-26T22:04:25.000Z"}]]},"git":{"updatedTime":1761516265000,"contributors":[{"name":"PAVEL TKACHEV","username":"","email":"phoenixweiss@ya.ru","commits":1}],"changelog":[{"hash":"b08244123ec11f0f24810ca659f86792f7a03172","time":1761516265000,"email":"phoenixweiss@ya.ru","author":"PAVEL TKACHEV","message":"Update <a href=\\"http://index.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">index.md</a>, <a href=\\"http://index.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">index.md</a>, 01_arrays_lists_set.md, and 5 more files"}]},"autoDesc":true,"filePathRelative":"disciplines/up01/lectures/04_trees_trie_graphs.md"}');export{d as comp,l as data};
