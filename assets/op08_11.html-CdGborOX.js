import{_ as c,c as i,b as n,a as e,d as p,e as a,w as u,r as o,o as d}from"./app-CdTySVJ0.js";const r="/assets/SQL_JOIN_TYPES-03jSc83F.png",k="/assets/SQL_INNER_JOIN-pGmq7WUR.png",m="/assets/SQL_LEFT_JOIN-Bp8zWSJt.png",b="/assets/SQL_RIGHT_JOIN-CG3Fe3XL.png",g="/assets/SQL_FULL_OUTER_JOIN-BoPvWItw.png",v="/assets/SQL_CROSS_JOIN-CIXmxJP5.png",N={},y={class:"hint-container warning"};function I(O,s){const t=o("RouteLink"),l=o("Mermaid");return d(),i("div",null,[n("div",y,[s[5]||(s[5]=n("p",{class:"hint-container-title"},"Примечание",-1)),s[6]||(s[6]=n("p",null,[n("strong",null,"ЭТО АРХИВНАЯ ВЕРСИЯ КУРСА!")],-1)),n("p",null,[s[1]||(s[1]=a('Материалы предназначаются для пересдающих дисциплину "ОП.08 - Основы проектирования баз данных" в соответствии с учебными планами СПО годов набора ',-1)),s[2]||(s[2]=n("strong",null,"ДО 2024-го",-1)),s[3]||(s[3]=a('. Для того чтобы ознакомиться с актуальным курсом "ИТ.03 - Основы проектирования баз данных" включающим интерактивные примеры, ',-1)),p(t,{to:"/disciplines/it03/"},{default:u(()=>[...s[0]||(s[0]=[a("перейдите по ссылке",-1)])]),_:1}),s[4]||(s[4]=a(".",-1))]),s[7]||(s[7]=n("p",null,"Материалы были перенесены со старого сайта с минимальной доработкой, поэтому не все возможности курса могут работать как ожидается, где-то может слететь форматирование.",-1)),s[8]||(s[8]=n("p",null,[n("strong",null,"Домашние задания в рамках курса проверяться не будут!")],-1))]),s[9]||(s[9]=e('<h1 id="оп-08-11-создание-связанных-таблиц-операция-join" tabindex="-1"><a class="header-anchor" href="#оп-08-11-создание-связанных-таблиц-операция-join"><span>ОП.08 - 11 - Создание связанных таблиц. Операция <code>JOIN</code></span></a></h1><h2 id="создание-связанных-таблиц" tabindex="-1"><a class="header-anchor" href="#создание-связанных-таблиц"><span>Создание связанных таблиц</span></a></h2><p>Для создания связанных таблиц в SQL необходимо определить отношение между ними. В данном случае, мы будем создавать таблицы <code>goods</code> (Товары) и <code>sales</code> (Продажи), которые будут связаны между собой через поле <code>id</code> товара.</p>',3)),p(l,{code:"eJytks1Kw1AQhfd9iiH7voA7oepCoUIfoIQ2lAtNI2lctULq78JCN64EFyK4DqEx0bTxFWbeyDOJpOlS8C7uT3LPN2cO1/E7xh75ttsijJNut9OjWbnXYSYBmSGdn5LFb7zljL844lyWvJVH/iR8WHOCwzVnclv9xr6Q0KoZ08A3kxEFJhg7wLwAkHKMWXEJ6XU9SsjRTjR0Bsa1x3Thm4Gq3rUKRwQppgRVM9XLvdzsROrWdr1LLBY/A5vjxgMnskCRmAsqEbKAyxz14bzSXrXKpXd4dvTfzStj5HnDaR+kYyW9ciwrTmUJI83mC978pZPvUrIuY4QdudtLpRGkHTiBcR2a2mOnrycQn0qjCDIjuAmh3MiqyfzgbC+a6l3M5+22N/vN6YAsJFn3ouYUlNbtWq0fppAsZg=="}),s[10]||(s[10]=e(`<p>Таблица &quot;Товары&quot;:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> goods <span class="token punctuation">(</span></span>
<span class="line">  id <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span></span>
<span class="line">  title <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  price <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  amount <span class="token keyword">INT</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>В данной таблице мы определяем поля:</p><ul><li><code>id</code> — уникальный идентификатор товара, являющийся первичным ключом</li><li><code>title</code> — Название товара</li><li><code>price</code> — Цена за единицу товара</li><li><code>amount</code> — Количество товаров на складе</li></ul><p>Таблица &quot;Продажи&quot;:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> sales <span class="token punctuation">(</span></span>
<span class="line">  id <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span></span>
<span class="line">  goods_id <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span><span class="token punctuation">,</span></span>
<span class="line">  amount <span class="token keyword">INT</span><span class="token punctuation">,</span></span>
<span class="line">  sale_date <span class="token keyword">DATETIME</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>goods_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> goods<span class="token punctuation">(</span>id<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>В данной таблице мы определяем поля:</p><ul><li><code>id</code> — уникальный идентификатор продажи, являющийся первичным ключом</li><li><code>goods_id</code> — внешний ключ, который ссылается на поле <code>id</code> таблицы <code>goods</code> (Товары), что позволяет установить связь между двумя таблицами</li><li><code>amount</code> — количество единиц товара в рамках конкретной продажи</li><li><code>sale_date</code> — дата и время совершения продажи</li></ul><blockquote><p>[!WARNING]<br> Важно, что внешний ключ и первичный ключ на которой он ссылается должны быть одного и того же типа!</p><ul><li><code>INT</code> и <code>INT</code> ✔️</li><li><code>BIGINT</code> и <code>BIGINT</code> ✔️</li><li><code>INT UNSIGNED</code> и <code>INT UNSIGNED</code> ✔️</li><li><code>BIGINT</code> и <code>INT</code> ✘</li><li><code>INT</code> и <code>INT UNSIGNED</code> ✘</li></ul></blockquote><p>Пример заполнения таблиц:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> goods <span class="token punctuation">(</span>id<span class="token punctuation">,</span> title<span class="token punctuation">,</span> price<span class="token punctuation">,</span> amount<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;Книга&#39;</span><span class="token punctuation">,</span> <span class="token number">500.00</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;Ручка&#39;</span><span class="token punctuation">,</span> <span class="token number">50.00</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;Тетрадь&#39;</span><span class="token punctuation">,</span> <span class="token number">100.00</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;Фломастер&#39;</span><span class="token punctuation">,</span> <span class="token number">150.00</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;Карандаш&#39;</span><span class="token punctuation">,</span> <span class="token number">80.00</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> sales <span class="token punctuation">(</span>id<span class="token punctuation">,</span> goods_id<span class="token punctuation">,</span> amount<span class="token punctuation">,</span> sale_date<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;2023-04-05 10:37:22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&#39;2023-04-05 11:22:30&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;2023-04-06 13:45:00&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">&#39;2023-04-07 15:20:10&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;2023-04-08 09:10:45&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;2023-04-08 14:30:00&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">&#39;2023-04-10 11:55:22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">&#39;2023-04-10 16:40:15&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&#39;2023-04-11 12:20:30&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">&#39;2023-04-12 09:00:00&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">&#39;2023-04-12 14:15:45&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">       <span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">&#39;2023-04-13 10:30:00&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>В данном примере мы добавляем несколько товаров в таблицу &quot;Товары&quot; и несколько продаж в таблицу &quot;Продажи&quot;. Обратите внимание на то, что в таблице &quot;Продажи&quot; мы указываем значение поля <code>goods_id</code>, которое соответствует существующему <code>id</code> в таблице &quot;Товары&quot;. Это позволяет установить связь между двумя таблицами и правильно отображать данные.</p><h2 id="операция-join" tabindex="-1"><a class="header-anchor" href="#операция-join"><span>Операция <code>JOIN</code></span></a></h2><p><code>JOIN</code> — это операция объединения таблиц в SQL. <code>JOIN</code> используется для объединения информации из разных таблиц по определенному условию. Это позволяет получить более полную информацию о данных и сделать более точные выводы. Например, можно объединить таблицу продаж с таблицей товаров, чтобы узнать, какой товар был продан в каком количестве и за какую цену.</p><p>В MySQL существует несколько типов <code>JOIN</code>.</p><figure><img src="`+r+'" alt="JOIN TYPES | lg" tabindex="0" loading="lazy"><figcaption>JOIN TYPES | lg</figcaption></figure><h3 id="inner-join" tabindex="-1"><a class="header-anchor" href="#inner-join"><span><code>INNER JOIN</code></span></a></h3><figure><img src="'+k+`" alt="INNER JOIN | block" tabindex="0" loading="lazy"><figcaption>INNER JOIN | block</figcaption></figure><p><code>INNER JOIN</code> — возвращает только те строки, которые имеют совпадающие значения в обеих таблицах.</p><p>Пример:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span></span>
<span class="line"><span class="token keyword">FROM</span> sales</span>
<span class="line"><span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> goods <span class="token keyword">ON</span> sales<span class="token punctuation">.</span>goods_id <span class="token operator">=</span> goods<span class="token punctuation">.</span>id<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="left-join" tabindex="-1"><a class="header-anchor" href="#left-join"><span><code>LEFT JOIN</code></span></a></h3><figure><img src="`+m+`" alt="LEFT JOIN | block" tabindex="0" loading="lazy"><figcaption>LEFT JOIN | block</figcaption></figure><p><code>LEFT JOIN</code> — возвращает все строки из левой таблицы и только те строки из правой таблицы, которые имеют совпадающие значения.</p><p>Пример:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span></span>
<span class="line"><span class="token keyword">FROM</span> goods</span>
<span class="line"><span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> sales <span class="token keyword">ON</span> goods<span class="token punctuation">.</span>id <span class="token operator">=</span> sales<span class="token punctuation">.</span>goods_id<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="right-join" tabindex="-1"><a class="header-anchor" href="#right-join"><span><code>RIGHT JOIN</code></span></a></h3><figure><img src="`+b+`" alt="RIGHT JOIN | block" tabindex="0" loading="lazy"><figcaption>RIGHT JOIN | block</figcaption></figure><p><code>RIGHT JOIN</code> — возвращает все строки из правой таблицы и только те строки из левой таблицы, которые имеют совпадающие значения.</p><p>Пример:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span></span>
<span class="line"><span class="token keyword">FROM</span> goods</span>
<span class="line"><span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> sales <span class="token keyword">ON</span> sales<span class="token punctuation">.</span>goods_id <span class="token operator">=</span> goods<span class="token punctuation">.</span>id<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="full-outer-join" tabindex="-1"><a class="header-anchor" href="#full-outer-join"><span><code>FULL OUTER JOIN</code></span></a></h3><figure><img src="`+g+`" alt="FULL OUTER JOIN | block" tabindex="0" loading="lazy"><figcaption>FULL OUTER JOIN | block</figcaption></figure><blockquote><p>[!ATTENTION]<br> На уровне стандарта SQL существует <code>FULL OUTER JOIN</code>. К сожалению, синтаксис <code>FULL OUTER JOIN</code> в MySQL работать не будет.</p></blockquote><p><code>FULL OUTER JOIN</code> — возвращает все строки из обеих таблиц, даже если они не имеют совпадающих значений.</p><p>Пример:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span></span>
<span class="line"><span class="token keyword">FROM</span> sales</span>
<span class="line"><span class="token keyword">FULL</span> <span class="token keyword">OUTER</span> <span class="token keyword">JOIN</span> goods <span class="token keyword">ON</span> sales<span class="token punctuation">.</span>goods_id <span class="token operator">=</span> goods<span class="token punctuation">.</span>id<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cross-join" tabindex="-1"><a class="header-anchor" href="#cross-join"><span><code>CROSS JOIN</code></span></a></h3><figure><img src="`+v+`" alt="CROSS JOIN | block" tabindex="0" loading="lazy"><figcaption>CROSS JOIN | block</figcaption></figure><blockquote><p>[!WARNING]<br> Этот тип <code>JOIN</code>-а возвращает огромное количество данных!</p></blockquote><p><code>CROSS JOIN</code> — возвращает результат сопоставления всех строк первой таблицы со всеми строками второй таблицы. При этом, по какому принципу эти данные связаны указывать не нужно.</p><p>Пример:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span></span>
<span class="line"><span class="token keyword">FROM</span> sales</span>
<span class="line"><span class="token keyword">CROSS</span> <span class="token keyword">JOIN</span> goods<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>[!TIP]<br> Если указан просто <code>JOIN</code> без уточнения типа (<code>INNER</code>, <code>LEFT</code>, <code>RIGHT</code> или <code>CROSS</code>), то в MySQL по умолчанию используется <code>INNER JOIN</code>.</p></blockquote><h3 id="примеры-использования-join" tabindex="-1"><a class="header-anchor" href="#примеры-использования-join"><span>Примеры использования <code>JOIN</code></span></a></h3><blockquote><p>[!NOTE]<br> Корректные примеры использования <code>LEFT</code>, <code>RIGHT</code> и <code>CROSS JOIN</code>-ов будут позднее в рамках данного курса, для текущего набора данных все примеры будут использовать <code>JOIN</code> (он же <code>INNER JOIN</code>).</p></blockquote><p>Примеры использования запроса <code>JOIN</code> для данных таблиц &quot;Товары&quot; и &quot;Продажи&quot;:</p><ol><li>Вывести все продажи с указанием названия товара и отсортировать их по дате продажи в порядке возрастания.</li></ol><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> goods<span class="token punctuation">.</span>title<span class="token punctuation">,</span> sales<span class="token punctuation">.</span>amount<span class="token punctuation">,</span> sales<span class="token punctuation">.</span>sale_date</span>
<span class="line"><span class="token keyword">FROM</span> sales</span>
<span class="line"><span class="token keyword">JOIN</span> goods <span class="token keyword">ON</span> sales<span class="token punctuation">.</span>goods_id <span class="token operator">=</span> goods<span class="token punctuation">.</span>id</span>
<span class="line"><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> sales<span class="token punctuation">.</span>sale_date<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>Найти общее количество проданных ручек:</li></ol><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>sales<span class="token punctuation">.</span>amount<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&quot;Всего продали ручек&quot;</span></span>
<span class="line"><span class="token keyword">FROM</span> sales</span>
<span class="line"><span class="token keyword">JOIN</span> goods <span class="token keyword">ON</span> sales<span class="token punctuation">.</span>goods_id <span class="token operator">=</span> goods<span class="token punctuation">.</span>id</span>
<span class="line"><span class="token keyword">WHERE</span> goods<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&#39;Ручка&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>Вывести общее количество продаж каждого товара:</li></ol><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> goods<span class="token punctuation">.</span>title<span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span>sales<span class="token punctuation">.</span>amount<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&quot;Всего продали товаров&quot;</span></span>
<span class="line"><span class="token keyword">FROM</span> sales</span>
<span class="line"><span class="token keyword">JOIN</span> goods <span class="token keyword">ON</span> sales<span class="token punctuation">.</span>goods_id <span class="token operator">=</span> goods<span class="token punctuation">.</span>id</span>
<span class="line"><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> goods<span class="token punctuation">.</span>title<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>Вывести на какую сумму денег всего продали книг:</li></ol><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>sales<span class="token punctuation">.</span>amount <span class="token operator">*</span> goods<span class="token punctuation">.</span>price<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&quot;Доход со всех продаж книг&quot;</span></span>
<span class="line"><span class="token keyword">FROM</span> sales</span>
<span class="line"><span class="token keyword">JOIN</span> goods <span class="token keyword">ON</span> sales<span class="token punctuation">.</span>goods_id <span class="token operator">=</span> goods<span class="token punctuation">.</span>id</span>
<span class="line"><span class="token keyword">WHERE</span> goods<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&#39;Книга&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,55))])}const E=c(N,[["render",I]]),w=JSON.parse('{"path":"/disciplines/op08/op08_11.html","title":"ОП.08 - 11 - Создание связанных таблиц. Операция JOIN","lang":"ru-RU","frontmatter":{"description":"Примечание ЭТО АРХИВНАЯ ВЕРСИЯ КУРСА! Материалы предназначаются для пересдающих дисциплину \\"ОП.08 - Основы проектирования баз данных\\" в соответствии с учебными планами СПО годов...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ОП.08 - 11 - Создание связанных таблиц. Операция JOIN\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-31T12:29:12.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://it.vshp.online/disciplines/op08/op08_11.html"}],["meta",{"property":"og:site_name","content":"Кафедра ИТ"}],["meta",{"property":"og:title","content":"ОП.08 - 11 - Создание связанных таблиц. Операция JOIN"}],["meta",{"property":"og:description","content":"Примечание ЭТО АРХИВНАЯ ВЕРСИЯ КУРСА! Материалы предназначаются для пересдающих дисциплину \\"ОП.08 - Основы проектирования баз данных\\" в соответствии с учебными планами СПО годов..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ru-RU"}],["meta",{"property":"og:updated_time","content":"2025-10-31T12:29:12.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-31T12:29:12.000Z"}]]},"git":{"updatedTime":1761913752000,"contributors":[{"name":"PAVEL TKACHEV","username":"","email":"phoenixweiss@ya.ru","commits":1}],"changelog":[{"hash":"a771585bc5911f4a729d06794a6706536be6cc56","time":1761913752000,"email":"phoenixweiss@ya.ru","author":"PAVEL TKACHEV","message":"Update <a href=\\"http://index.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">index.md</a>, abacus.png, ada_lawlace.png, and 105 more files"}]},"autoDesc":true,"filePathRelative":"disciplines/op08/op08_11.md"}');export{E as comp,w as data};
